<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<!-- sql命名规范:tms +模块名称(dp,rule,stat)+sql名称 -->
<properties>
	
	<!-- 查询服务器列表 -->
	<entry key="TMS.SERVER.LIST"><![CDATA[SELECT T.* FROM TMS_RUN_SERVER T WHERE convert(numeric,datediff(second , T.ACTIVETIME , getDate()))*1000<T.PINGDELAY AND convert(varchar,T.SERVTYPE)=?]]></entry>
	
	
	<!--宏观报表展示SQL语句开始 -->
	<!-- 地图展示SQL -->
	<entry key="tms.report.s_alert_chinamap"><![CDATA[SELECT  tst.REGIONCODE regioncode,sum(tst.NUMALERTS ) mapvalue FROM TMS_STATMACRO_TXN tst WHERE tst.dateid >= :month and  tst.dateid< :nextmonth having sum(tst.NUMALERTS ) >0  GROUP BY  tst.regioncode  ORDER BY  mapvalue]]></entry>
	<entry key="tms.report.s_session_chinamap"><![CDATA[SELECT  tsv.REGIONCODE regioncode,sum(tsv.NUMSESSIONS ) mapvalue  FROM TMS_STATMACRO_VISITRISK tsv WHERE tsv.dateid >= :month and tsv.dateid< :nextmonth having sum(tsv.NUMSESSIONS ) >0  GROUP BY tsv.regioncode ORDER BY mapvalue]]></entry>
	<entry key="tms.report.s_user_chinamap"><![CDATA[SELECT  tsv.REGIONCODE regioncode,sum(tsv.NUMUSERS ) mapvalue  FROM TMS_STATMACRO_VISITRISK tsv WHERE tsv.dateid >= :month and tsv.dateid< :nextmonth having sum(tsv.NUMUSERS ) >0  GROUP BY  tsv.regioncode  ORDER BY  mapvalue]]></entry>
	<entry key="tms.report.s_txn_chinamap"><![CDATA[SELECT  tst.REGIONCODE regioncode,sum(tst.NUMTXNS ) mapvalue  FROM TMS_STATMACRO_TXN tst WHERE tst.dateid >= :month and tst.dateid< :nextmonth having sum(tst.NUMTXNS ) >0  GROUP BY  tst.regioncode  ORDER BY  mapvalue]]></entry>
	
	<!-- top5数据展示 -->
	<entry key="tms.report.s_top5"><![CDATA[SELECT tmr.regionname  REGIONNAME,sum(tsv.numusers) NUMUSERS,sum(tsv.numsessions) SESSIONS,sum(tst.numtxns) TXNS,sum(tst.numalerts) ALERTS,tmr.regioncode REGIONCODE FROM (select sum(v.numusers) numusers,sum(v.numsessions) numsessions,regioncode,dateid from TMS_STATMACRO_VISITRISK v group by v.dateid, v.regioncode) tsv,(select sum(t.numtxns) numtxns,sum(t.numalerts) numalerts,regioncode,dateid from TMS_STATMACRO_TXN t group by t.dateid,t.regioncode) tst,TMS_MGR_REGION tmr where tsv.dateid = tst.dateid and tsv.regioncode = tst.regioncode and tmr.regioncode = tsv.regioncode and tsv.DATEID >= :month and tsv.DATEID < :nextmonth group by tmr.regioncode,tmr.regionname]]></entry>

	<!-- 地区详细信息展示 -->
	<entry key="tms.report.s_detail_region_grid"><![CDATA[SELECT max(tmc.regioncode) REGIONCODE, nvl(tmc.CITYCODE,0) CITYCODE,nvl(tmc.cityname,'其他地区') CITYNAME,nvl(sum(tst.NUMUSERS),0) NUMUSERS,nvl(sum(tst.NUMSESSIONS),0) NUMSESSIONS,nvl(sum(tst.NUMTXNS),0) NUMTXNS ,nvl(sum(tst.NUMTRIGS),0) NUMTRIGS,nvl(sum(tst.NUMHITS),0) NUMHITS,nvl(sum(tst.NUMALERTS),0) NUMALERTS,nvl(sum(tst.NUMALERTSERIOUS),0) NUMALERTSERIOUS,nvl(sum(tst.NUMALERTHIGN),0) NUMALERTHIGN,nvl(sum(tst.NUMALERTMID),0) NUMALERTMID,nvl(sum(tst.NUMALERTLOW),0) NUMALERTLOW,nvl(sum(tst.NUMALERTNOR),0) NUMALERTNOR ,round(case when sum(nvl(tst.NUMTRIGS,0))=0 then 0 else sum(nvl(tst.NUMHITS,0))/sum(nvl(tst.NUMTRIGS,0)) end*100,2) HIT ,round(case when sum(nvl(tst.NUMTXNS,0))=0 then 0 else sum(nvl(tst.NUMALERTS,0))/sum(nvl(tst.NUMTXNS,0)) end*100,2)  ALERT FROM (select t1.citycode,t1.regioncode,t1.cityname from TMS_MGR_CITY t1 where t1.regioncode = :regioncode ) tmc LEFT JOIN (select max(t2.regioncode) REGIONCODE,CITYCODE,sum(t2.NUMUSERS) NUMUSERS,sum(t2.NUMSESSIONS) NUMSESSIONS,sum(t2.NUMTXNS) NUMTXNS ,sum(t2.NUMTRIGS) NUMTRIGS,sum(t2.NUMHITS) NUMHITS,sum(t2.NUMALERTS) NUMALERTS,sum(t2.NUMALERTSERIOUS) NUMALERTSERIOUS ,sum(t2.NUMALERTHIGN) NUMALERTHIGN,sum(t2.NUMALERTMID) NUMALERTMID,sum(t2.NUMALERTLOW) NUMALERTLOW,sum(t2.NUMALERTNOR) NUMALERTNOR ,round(case when sum(nvl(t2.NUMTRIGS,0))=0 then 0 else sum(nvl(t2.NUMHITS,0))/sum(nvl(t2.NUMTRIGS,0)) end*100,2) HIT ,round(case when sum(nvl(t2.NUMTXNS,0))=0 then 0 else sum(nvl(t2.NUMALERTS,0))/sum(nvl(t2.NUMTXNS,0)) end*100,2) ALERT from TMS_STATMACRO_REPORT t2 where t2.dateid >=:start_time and t2.dateid <=:end_time group by t2.citycode) tst ON tmc.citycode = tst.citycode group by tmc.citycode,tmc.cityname order by NUMUSERS desc]]></entry>	
	<entry key="tms.report.s_detail_region_chart"><![CDATA[SELECT max(tcd.nummonth) cmonth,max(tcd.numday) cday,nvl(sum(tst.numtxns),0) NUMTXNS ,nvl(sum(tst.numalerts),0) NUMALERTS ,nvl(sum(tst.numusers),0) NUMUSERS ,nvl(sum(tst.numsessions),0) NUMSESSIONS   from (select nummonth ,numday ,dateid from TMS_COM_DATE t1 where t1.dateid >= :start_time and t1.dateid<=:end_time) tcd  LEFT JOIN  (select t2.dateid, sum(t2.NUMUSERS) NUMUSERS,sum(t2.NUMSESSIONS) NUMSESSIONS,sum(t2.NUMTXNS) NUMTXNS ,sum(t2.NUMALERTS) NUMALERTS from TMS_STATMACRO_REPORT t2 where t2.regioncode = :regioncode group by t2.dateid) tst ON tst.dateid= tcd.dateid   where tcd.dateid >= :start_time and tcd.dateid<=:end_time group by tcd.dateid  order by to_number(tcd.dateid)]]></entry>
	<entry key="tms.report.s_contrast_city"><![CDATA[SELECT nvl(tmc.CITYCODE,0) CITYCODE,nvl(tmc.cityname,'其他地区') CITYNAME,nvl(sum(tst.NUMUSERS),0) NUMUSERS,nvl(sum(tst.NUMSESSIONS),0) NUMSESSIONS,nvl(sum(tst.NUMTXNS),0) NUMTXNS ,nvl(sum(tst.NUMTRIGS),0) NUMTRIGS,nvl(sum(tst.NUMHITS),0) NUMHITS,nvl(sum(tst.NUMALERTS),0) NUMALERTS,nvl(sum(tst.NUMALERTSERIOUS),0) NUMALERTSERIOUS  ,nvl(sum(tst.NUMALERTHIGN),0) NUMALERTHIGN,nvl(sum(tst.NUMALERTMID),0) NUMALERTMID,nvl(sum(tst.NUMALERTLOW),0) NUMALERTLOW,nvl(sum(tst.NUMALERTNOR),0) NUMALERTNOR  ,round(case when sum(nvl(tst.NUMTRIGS,0))=0 then 0 else sum(nvl(tst.NUMHITS,0))/sum(nvl(tst.NUMTRIGS,0)) end*100,2) HIT ,round(case when sum(nvl(tst.NUMTXNS,0))=0 then 0 else sum(nvl(tst.NUMALERTS,0))/sum(nvl(tst.NUMTXNS,0)) end*100,2) ALERT  FROM (select t1.citycode,t1.regioncode,t1.cityname from TMS_MGR_CITY t1 where (${regioncity}) ) tmc  LEFT JOIN (select max(t2.regioncode) REGIONCODE,CITYCODE,sum(t2.NUMUSERS) NUMUSERS,sum(t2.NUMSESSIONS) NUMSESSIONS,sum(t2.NUMTXNS) NUMTXNS ,sum(t2.NUMTRIGS) NUMTRIGS,sum(t2.NUMHITS) NUMHITS,sum(t2.NUMALERTS) NUMALERTS,sum(t2.NUMALERTSERIOUS) NUMALERTSERIOUS ,sum(t2.NUMALERTHIGN) NUMALERTHIGN,sum(t2.NUMALERTMID) NUMALERTMID,sum(t2.NUMALERTLOW) NUMALERTLOW,sum(t2.NUMALERTNOR) NUMALERTNOR ,round(case when sum(nvl(t2.NUMTRIGS,0))=0 then 0 else sum(nvl(t2.NUMHITS,0))/sum(nvl(t2.NUMTRIGS,0)) end*100,2) HIT ,round(case when sum(nvl(t2.NUMTXNS,0))=0 then 0 else sum(nvl(t2.NUMALERTS,0))/sum(nvl(t2.NUMTXNS,0)) end*100,2) ALERT from TMS_STATMACRO_REPORT t2 where t2.dateid >=:start_time and t2.dateid <=:end_time group by t2.citycode) tst ON tst.citycode = tmc.citycode  group by tmc.citycode,tmc.cityname order by NUMUSERS desc]]></entry>
	<entry key="tms.report.s_contrast_region"><![CDATA[SELECT nvl(tmc.regionCODE,0) regionCODE,max(nvl(tmc.regionname,'其他地区')) CITYNAME,nvl(sum(tst.NUMUSERS),0) NUMUSERS,nvl(sum(tst.NUMSESSIONS),0) NUMSESSIONS,nvl(sum(tst.NUMTXNS),0) NUMTXNS ,nvl(sum(tst.NUMTRIGS),0) NUMTRIGS,nvl(sum(tst.NUMHITS),0) NUMHITS,nvl(sum(tst.NUMALERTS),0) NUMALERTS,nvl(sum(tst.NUMALERTSERIOUS),0) NUMALERTSERIOUS  ,nvl(sum(tst.NUMALERTHIGN),0) NUMALERTHIGN,nvl(sum(tst.NUMALERTMID),0) NUMALERTMID,nvl(sum(tst.NUMALERTLOW),0) NUMALERTLOW,nvl(sum(tst.NUMALERTNOR),0) NUMALERTNOR  ,round(case when sum(nvl(tst.NUMTRIGS,0))=0 then 0 else sum(nvl(tst.NUMHITS,0))/sum(nvl(tst.NUMTRIGS,0)) end*100,2) HIT ,round(case when sum(nvl(tst.NUMTXNS,0))=0 then 0 else sum(nvl(tst.NUMALERTS,0))/sum(nvl(tst.NUMTXNS,0)) end*100,2) ALERT  FROM (select t1.regionname,t1.regioncode from Tms_Mgr_Region t1 where (${regioncity}) ) tmc  LEFT JOIN (select t2.regioncode,sum(t2.NUMUSERS) NUMUSERS,sum(t2.NUMSESSIONS) NUMSESSIONS,sum(t2.NUMTXNS) NUMTXNS ,sum(t2.NUMTRIGS) NUMTRIGS,sum(t2.NUMHITS) NUMHITS,sum(t2.NUMALERTS) NUMALERTS,sum(t2.NUMALERTSERIOUS) NUMALERTSERIOUS ,sum(t2.NUMALERTHIGN) NUMALERTHIGN,sum(t2.NUMALERTMID) NUMALERTMID,sum(t2.NUMALERTLOW) NUMALERTLOW,sum(t2.NUMALERTNOR) NUMALERTNOR ,round(case when sum(nvl(t2.NUMTRIGS,0))=0 then 0 else sum(nvl(t2.NUMHITS,0))/sum(nvl(t2.NUMTRIGS,0)) end*100,2) HIT ,round(case when sum(nvl(t2.NUMTXNS,0))=0 then 0 else sum(nvl(t2.NUMALERTS,0))/sum(nvl(t2.NUMTXNS,0)) end*100,2) ALERT from TMS_STATMACRO_REPORT t2 where t2.dateid >=:start_time and t2.dateid <=:end_time group by t2.regioncode) tst    ON tst.regioncode = tmc.regioncode  group by tmc.regioncode order by NUMUSERS desc]]></entry>
	<!--宏观报表展示SQL语句结束 -->
	
	<!--============实时运行监控开始==============-->
	<!-- 实时告警监控SQL -->
	<entry key="tms.monitor.s_alert_chart"><![CDATA[ SELECT alert.TIMEID TIMEID, SUM(CASE WHEN alert.SCORE IS NOT NULL THEN 1 ELSE 0 END) NUMALL, SUM(CASE WHEN alert.SCORE >= 0 AND alert.SCORE <= 20 THEN 1 ELSE 0 END) NUM0, SUM(CASE WHEN alert.SCORE > 20 AND alert.SCORE <= 50 THEN 1 ELSE 0 END) NUM2, SUM(CASE WHEN alert.SCORE > 50 AND alert.SCORE <= 70 THEN 1 ELSE 0 END) NUM5, SUM(CASE WHEN alert.SCORE > 70 AND alert.SCORE <= 90 THEN 1 ELSE 0 END) NUM7, SUM(CASE WHEN alert.SCORE > 90 THEN 1 ELSE 0 END) NUM9 FROM (SELECT TXNCODE, SCORE, CREATETIME, TO_CHAR(CREATETIME / (1000 * 60 * 60 * 24) + TO_DATE('1970-01-01 08:00:00', 'YYYY-MM-DD HH24:MI:SS'), 'HH24:MI') TIMEID FROM TMS_RUN_ALERT) ALERT INNER JOIN TMS_RUN_TRAFFICDATA TRAFFIC ON alert.TXNCODE = traffic.TXNCODE WHERE alert.CREATETIME BETWEEN :oneHourAgoTime AND :currentTime GROUP BY TIMEID]]></entry>
	
	<!-- 规则运行监控SQL -->
	<entry key="tms.monitor.s_rule_temp_chart"><![CDATA[select rule.rule_shortdesc ruledesc, t.txntype, t.txnnum, t.numhits, t.avgexec, (case txnnum when 0 then 0 else nvl(round(numhits*100/txnnum,2),0) end) rulerate from (select trig.ruleid, trig.txntype, (select count(traffic.txncode) from tms_run_trafficdata traffic where traffic.txntype = trig.txntype and traffic.createtime between :oneHourAgoTime and :currentTime) txnnum, count(trig.trigid) numhits, nvl(round(avg(trig.numtimes),2),0) avgexec from tms_run_ruletrig trig where trig.createtime between :oneHourAgoTime and :currentTime group by trig.ruleid,trig.txntype) t,tms_com_rule rule where t.ruleid = rule.rule_id and t.txnnum != 0 and rule.rule_shortdesc like '%'||:ruleName||'%']]></entry>
	<entry key="tms.monitor.s_rule_hour_chart"><![CDATA[select rule.rule_shortdesc ruledesc, t.txntype, t.txnnum, t.numhits, t.avgexec, (case txnnum when 0 then 0 else nvl(round(numhits*100/txnnum,2),0) end) rulerate from (select trig.ruleid, trig.txntype, (select count(traffic.txncode) from tms_run_trafficdata traffic where traffic.txntype = trig.txntype and traffic.createtime between :hourAgoTime and :currentTime) txnnum, count(trig.trigid) numhits, nvl(round(avg(trig.numtimes),2),0) avgexec from tms_run_ruletrig trig where trig.createtime between :hourAgoTime and :currentTime group by trig.ruleid,trig.txntype) t,tms_com_rule rule where t.ruleid = rule.rule_id and t.txnnum != 0 and rule.rule_shortdesc like '%'||:ruleName||'%']]></entry>
	
	<!-- 查询选中规则的命中率 -->
	<entry key="tms.monitor.s_onerule_temp_chart"><![CDATA[select  t.RULEID RULEID,sum(t.val) NUMTRIGS,nvl(sum(case when hitflag = '1' then t.val else 0 end),0) NUMHITS,round((sum(case when hitflag = '1' then t.val else 0 end)/sum(t.val)*100),2) rulerate,round(avg(t.numtimes),2) AVGEXECTIMES from (select tmp.ruleid RULEID,count(tmp.ruletrigid) val ,tmp.hitflag,round(avg(tmp.numtimes),2) numtimes from tms_stat_ruletrig tmp  where tmp.ruleid= :ruleId and tmp.starttime between  :oneHourAgoTime and :currentTime group by tmp.ruleid,tmp.hitflag) t group by t.ruleid]]></entry>
	<entry key="tms.monitor.s_onerule_hour_chart"><![CDATA[select * from (SELECT tsr.ruleid RULEID,nvl(sum(tsr.NUMTRIGS),0) NUMTRIGS, nvl(sum(tsr.NUMHITS),0) NUMHITS,nvl(round(case when sum(tsr.NUMTRIGS)=0 then 0 else sum(tsr.NUMHITS)/nvl(sum(tsr.NUMTRIGS),1)*100 end,2),0)  RULERATE,round(case when sum(NUMHITS)=0 then 0 else nvl(sum(tsr.AVGEXECTIMES),0)/nvl(sum(NUMHITS),1) end,0)  AVGEXECTIMES,round(nvl(max(tsr.MAXEXECTIMES),0),0) MAXEXECTIMES,round(nvl(min(MINEXECTIMES),0),0) MINEXECTIMES  FROM TMS_STAT_RULE tsr  WHERE tsr.ruleid= :ruleId and  tsr.TIMEID >= :timeid AND tsr.TIMEID < :currentHour GROUP BY tsr.ruleid) ]]></entry>
	
	
	<!-- 交易运行监控SQL -->
	<entry key="tms.monitor.s_txn_temp_chart"><![CDATA[select * from (select tt.txntype,(select tab.tab_desc from tms_dp_channel channel,tms_com_tab tab where channel.channelid=tab.chann and tab.tab_name=tt.txntype) TXNNAME,tt.numtxns NUMTXNS, nvl(round(tt.numtxnsuccess*100/tt.numtxns,2),0) TXNSUCCESSRATE, nvl(round(tt.numtxnalert*100/numtxns,2),0) TXNALERTRATE, tt.avgexectimes AVGEXECTIMES from (select t.txntype, count(t.txncode) numtxns, sum(case when t.alertnum > 0 then 1 else 0 end) numtxnalert, nvl(sum(case when t.txnstatus = '1' then 1 else 0 end), 0) numtxnsuccess, nvl(round(avg(t.finishtime - t.createtime), 2), 0) avgexectimes from (select traffic.*, (select count(al.alertid) from tms_run_alert al where al.txncode = traffic.txncode) alertnum from tms_run_trafficdata traffic where traffic.createtime between :oneHourAgoTime and :currentTime) t group by t.txntype) tt) ]]></entry>
	<entry key="tms.monitor.s_txn_hour_chart"><![CDATA[select * from (select tt.txntype,(select tab.tab_desc from tms_dp_channel channel,tms_com_tab tab where channel.channelid=tab.chann and tab.tab_name=tt.txntype) TXNNAME,tt.numtxns NUMTXNS, nvl(round(tt.numtxnsuccess*100/tt.numtxns,2),0) TXNSUCCESSRATE, nvl(round(tt.numtxnalert*100/numtxns,2),0) TXNALERTRATE, tt.avgexectimes AVGEXECTIMES from (select t.txntype, count(t.txncode) numtxns, sum(case when t.alertnum > 0 then 1 else 0 end) numtxnalert, nvl(sum(case when t.txnstatus = '1' then 1 else 0 end), 0) numtxnsuccess, nvl(round(avg(t.finishtime - t.createtime), 2), 0) avgexectimes from (select traffic.*, (select count(al.alertid) from tms_run_alert al where al.txncode = traffic.txncode) alertnum from tms_run_trafficdata traffic where traffic.createtime between :hourAgoTime and :currentTime) t group by t.txntype) tt) ]]></entry>
	
	<!-- 风险数据统计SQL -->
	<entry key="tms.monitor.s_risk_temp_chart"><![CDATA[SELECT '用户数' STNAME,count(distinct traffic.userid) STVALUE from tms_run_trafficdata traffic,tms_run_alert alert where traffic.txncode=alert.txncode and alert.createtime between :oneHourAgoTime and :currentTime union all select '会话数' STNAME,count(distinct traffic.sessionid) STVALUE from tms_run_trafficdata traffic,tms_run_alert alert where traffic.txncode=alert.txncode and alert.createtime between :oneHourAgoTime and :currentTime  union all select '访问IP数' STNAME,count(distinct traffic.ipaddr) STVALUE from tms_run_trafficdata traffic,tms_run_alert alert where traffic.txncode=alert.txncode and alert.createtime between :oneHourAgoTime and :currentTime union all select '访问设备数' STNAME,count(distinct traffic.deviceid) STVALUE from tms_run_trafficdata traffic,tms_run_alert alert where traffic.txncode=alert.txncode and alert.createtime between :oneHourAgoTime and :currentTime]]></entry>
	<entry key="tms.monitor.s_risk_hour_chart"><![CDATA[SELECT '用户数' STNAME,count(distinct traffic.userid) STVALUE from tms_run_trafficdata traffic,tms_run_alert alert where traffic.txncode=alert.txncode and alert.createtime between :hourAgoTime and :currentTime union all select '会话数' STNAME,count(distinct traffic.sessionid) STVALUE from tms_run_trafficdata traffic,tms_run_alert alert where traffic.txncode=alert.txncode and alert.createtime between :hourAgoTime and :currentTime  union all select '访问IP数' STNAME,count(distinct traffic.ipaddr) STVALUE from tms_run_trafficdata traffic,tms_run_alert alert where traffic.txncode=alert.txncode and alert.createtime between :hourAgoTime and :currentTime union all select '访问设备数' STNAME,count(distinct traffic.deviceid) STVALUE from tms_run_trafficdata traffic,tms_run_alert alert where traffic.txncode=alert.txncode and alert.createtime between :hourAgoTime and :currentTime]]></entry>
	<!--============实时运行监控结束==============-->
	
	<!-- 行为模式属性配置界面，交易属性结构下拉框 -->
	<entry key="tms.dp.listFeatureByTxnId.sql"><![CDATA[select '--'|| m.PROPNAME PROPNAME, f.TXNFEATUREID TXNFEATUREID, m.DATATYPE DATATYPE, f.TXNID c, m.PROPCODE d,'' e ,m.METAOBJID f, o.orderby g1, m.orderby g2    from TMS_DP_TXNFEATURE  f left join TMS_COM_METAOBJPROP  m on f.TXNPARAMID=m.METAOBJPROPID left join TMS_COM_METAOBJ o on o.METAOBJID=m.METAOBJID  where f.TXNID= :FtxnId  and f.PARAMSOURCE='0'  union  select '--'|| f.TXNPARAMNAME PROPNAME, f.TXNFEATUREID TXNFEATUREID,  f.TXNPARAMTYPE DATATYPE, f.TXNID c, f.TXNPARAMCODE d,'' e ,o.METAOBJID f, o.orderby g1, f.orderby g2   from TMS_DP_TXNFEATURE f   left join TMS_COM_METAOBJ o on o.METAOBJID=f.TXNPARAMGRPID    where f.TXNID= :StxnId and f.PARAMSOURCE='1'   union  select o.OBJNAME PROPNAME, '' TXNFEATUREID, '' DATATYPE, '' c, '' d, '' e, '' f, o.orderby g1, -1 g2    from TMS_COM_METAOBJ o   where o.METAOBJID in (select distinct TXNPARAMGRPID from TMS_DP_TXNFEATURE t where t.TXNID= :TtxnId ) order by g1,g2]]></entry>
	<!-- 行为模式列表页面 -->
	<entry key="tms.dp.listPattern.sql"><![CDATA[SELECT  p.PATTERNID, p.TXNID, p.PATTERNNAME, p.STATUS, p.CREATETIME, p.MODIFYTIME, c.CHANNELNAME ||'--'||  g.GROUPNAME||'--'||  t.TXNNAME as TXNNAME  FROM TMS_DP_PATTERN p left join TMS_DP_TXN t  on p.TXNID = t.TXNID left join TMS_DP_TXNGROUP g  on t.TXNGROUPID = g.TXNGROUPID left join TMS_DP_CHANNEL c  on g.CHANNELID = c.CHANNELID]]></entry>
	
	<!-- 通用sql -->
	<entry key="tms.common.systime"><![CDATA[SELECT TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS') DBSYSTIME FROM DUAL]]></entry>
	<entry key="tms.common.sequenceid"><![CDATA[SELECT ${SEQUENCENAME}.nextval SEQUENCEID FROM DUAL]]></entry>


	
	<!--======================运行报表开始==========================-->
	<!-- 交易报表sql -->
	<!-- <entry key="report.txn.list"><![CDATA[ select max(t.txnname) TXNNAME,max(t.channelid) CHANNELID,max(t.channelname) CHANNELNAME,nvl(sum(r.alert_number),0) ALERTNUMBER,nvl(sum(r.TXN_NUMBER),0) TXNNUMBER,  nvl(ROUND(sum(r.alert_number)*100/sum(r.TXN_NUMBER),2),0)  TXNALERTRATE , nvl(sum(r.ALERT_SUS_NUMBER),0) ALERTSUSNUMBER,  nvl(ROUND(sum(r.ALERT_SUS_NUMBER)*100/sum(r.alert_number),2),0)  SUSRATE,  nvl(ROUND(avg(r.TXN_RUNTIME_AVG),2),0) AVGTIME, nvl(ROUND(max(r.Txn_Runtime_Max),2),0) MAXTIME, nvl(ROUND(min(r.TXN_RUNTIME_MIN),2),0) MINTIME, nvl(ROUND(sum(r.BLOCK_NUMBER)*100/sum(r.alert_number),2),0)  BLOCKRATE,  nvl(ROUND(sum(r.HANG_NUMBER)*100/sum(r.alert_number),2) ,0) HANGRATE,  nvl(ROUND(sum(r.AUTH_NUMBER)*100/sum(r.alert_number),2),0)  AUTHRATE,  nvl(ROUND(sum(r.ALARM_NUMBER)*100/sum(r.alert_number),2),0) ALERTRATE,  nvl(ROUND(sum(r.DEFECT_NUMBER)*100/sum(r.alert_number),2),0)  DEFRATE, nvl(ROUND(sum(r.ERROR_NUMBER)*100/sum(r.alert_number),2),0)  ERRORRATE  from report_theme_txn_star_alert r left join  (select t.txnid TXNID,t.txnname TXNNAME,t.channelid CHANNELID,r.channelname CHANNELNAME from REPORT_THEME_PUB_TXN  t left join report_theme_pub_channel r on t.channelid = r.channelid) t on r.txnid=t.txnid   where 1=1 ]]></entry> -->
	<entry key="report.txn.list"><![CDATA[SELECT a.*, (CASE WHEN b.SUMTXN = '0' THEN 0 ELSE NVL(ROUND(a.TXNNUMBER * 100 / b.SUMTXN, 2), 0) END) TXNRATE, (CASE WHEN b.SUMALERT = '0' THEN 0 ELSE NVL(ROUND(a.ALERTNUMBER * 100 / b.SUMALERT, 2), 0) END) AS SUMALERTRATE FROM (SELECT s.TXNID, s.CHANNELID, s.CHANNELNAME, s.ALERTNUMBER, s.TXNNUMBER, s.ALERTSUSNUMBER, NVL(ROUND(s.ALERTNUMBER * 100 / s.TXNNUMBER, 2), 0) TXNALERTRATE, NVL(ROUND(s.ALERTSUSNUMBER * 100 / s.ALERTNUMBER, 2), 0) SUSRATE, AVGTIME, s.MAXTIME, s.MINTIME, NVL(ROUND(s.BLOCKNUMBER * 100 / s.ALERTNUMBER, 2), 0) BLOCKRATE, NVL(ROUND(s.HANGNUMBER * 100 / s.ALERTNUMBER, 2), 0) HANGRATE, NVL(ROUND(s.AUTHNUMBER * 100 / s.ALERTNUMBER, 2), 0) AUTHRATE, NVL(ROUND(s.ALARMNUMBER * 100 / s.ALERTNUMBER, 2), 0) ALERTRATE, NVL(ROUND(s.DEFECTNUMBER * 100 / s.ALERTNUMBER, 2), 0) DEFRATE, NVL(ROUND(s.ERRORNUMBER * 100 / s.ALERTNUMBER, 2), 0) ERRORRATE FROM (SELECT MAX(t.TXNID) TXNID, MAX(t.TXNNAME) TXNNAME, MAX(t.CHANNELID) CHANNELID, MAX(t.CHANNELNAME) CHANNELNAME, NVL(SUM(r.ALERT_NUMBER), 0) ALERTNUMBER, NVL(SUM(r.TXN_NUMBER), 0) TXNNUMBER, NVL(SUM(r.ALERT_SUS_NUMBER), 0) ALERTSUSNUMBER, NVL(ROUND(SUM(r.TXN_RUNTIME_AVG * r.TXN_NUMBER) / SUM(r.TXN_NUMBER), 2), 0) AVGTIME, NVL(ROUND(MAX(r.TXN_RUNTIME_MAX), 2), 0) MAXTIME, NVL(ROUND(MIN(r.TXN_RUNTIME_MIN), 2), 0) MINTIME, NVL(SUM(r.BLOCK_NUMBER), 0) BLOCKNUMBER, NVL(SUM(r.HANG_NUMBER), 0) HANGNUMBER, NVL(SUM(r.AUTH_NUMBER), 0) AUTHNUMBER, NVL(SUM(r.ALARM_NUMBER), 0) ALARMNUMBER, NVL(SUM(r.DEFECT_NUMBER), 0) DEFECTNUMBER, NVL(SUM(r.ERROR_NUMBER), 0) ERRORNUMBER FROM REPORT_THEME_TXN_STAR_ALERT r LEFT JOIN (SELECT t.TAB_NAME TXNID, t.TAB_DESC TXNNAME, t.CHANN CHANNELID, r.CHANNELNAME CHANNELNAME FROM REPORT_THEME_PUB_TXN t LEFT JOIN REPORT_THEME_PUB_CHANNEL R ON t.CHANN = r.CHANNELID) t ON r.TXNID = t.TXNID WHERE 1 = 1]]></entry>
	
	<!-- 规则报表sql -->
	<!-- <entry key="report.rule.list"><![CDATA[ SELECT r.rulename RULENAME,txn.txnname TXNNAME,r.disposal DISPOSAL, nvl(r.score,0)  SCORE,nvl(r.weight,0)  WEIGHT, nvl(sum(al.trigger_number),0)  TRIGGERNUM,nvl(sum(al.hit_number),0)  HITNUM, nvl(ROUND(sum(al.hit_number)*100/sum(al.trigger_number),2),0)  HITRATE, nvl(ROUND(sum(al.rule_runtime_avg*al.trigger_number)/sum(al.trigger_number),2),0)  AVGTIME, nvl(ROUND(max(al.rule_runtime_max),2),0)  MAXTIME, nvl(ROUND(min(al.rule_runtime_min),2),0) MINTIME  FROM report_theme_rule_star_alert al  left join report_theme_pub_txn txn on al.txnid=txn.txnid  left join report_theme_pub_rule r on al.ruleid=r.ruleid left join report_theme_pub_channel c on txn.channelid=c.channelid where 1=1 ]]></entry> -->
	<entry key="report.rule.list"><![CDATA[select a.*,(case when b.TRIGGERSUM = '0' then  0 else nvl(ROUND(a.TRIGGERNUM * 100 / b.TRIGGERSUM, 2), 0) end) TRIGGERRATE, (case when b.HITSUM = '0' then 0 else nvl(round(a.HITNUM * 100 / b.HITSUM, 2), 0) end) as HITNUMRATE from (select a1.*, nvl(a2.TRIGGERNUMBER, 0) TRIGGERNUM, (case when nvl(a2.TRIGGERNUMBER, 0) = '0' then 0 else nvl(round(a1.HITNUM * 100 / nvl(a2.TRIGGERNUMBER, 0), 2), 0) end) HITRATE from (select r.RULE_SHORTDESC RULENAME, txn.TAB_NAME TXNID,nvl(r.RULE_SCORE,0) SCORE, nvl(sum(al.HIT_NUMBER),0) HITNUM, nvl(round(sum(al.RULE_RUNTIME_AVG*al.TRIGGER_NUMBER)/sum(al.TRIGGER_NUMBER),2),0) AVGTIME, nvl(round(max(al.RULE_RUNTIME_MAX),2),0) MAXTIME, nvl(round(min(al.RULE_RUNTIME_MIN),2),0) MINTIME from REPORT_THEME_RULE_STAR_ALERT al inner join REPORT_THEME_PUB_TXN txn on al.TXNID=txn.TAB_NAME inner join REPORT_THEME_PUB_RULE r on al.RULEID=r.RULE_ID inner join REPORT_THEME_PUB_CHANNEL c on txn.CHANN=c.CHANNELID where 1=1 ]]></entry>
	
	<!-- 日期报表sql -->
	<entry key="report.date.list"><![CDATA[ SELECT a.*, (CASE WHEN b.SUMTXN = '0' THEN 0 ELSE NVL(ROUND(a.TXNNUMBER * 100 / b.SUMTXN, 2), 0) END) TXNRATE, (CASE WHEN b.SUMALERT = '0' THEN 0 ELSE NVL(ROUND(a.ALERTNUMBER * 100 / b.SUMALERT, 2), 0) END) AS ALERTNUMRATE FROM (SELECT s.ALERTDATE, s.ALERTNUMBER, s.TXNNUMBER, s.TXNALERTRATE, s.ALERTSUSNUMBER, NVL(ROUND(s.ALERTSUSNUMBER * 100 / s.ALERTNUMBER, 2), 0) SUSRATE, s.AVGTIME, s.MAXTIME, s.MINTIME, NVL(ROUND(s.BLOCKSUSNUMBER * 100 / s.ALERTNUMBER, 2), 0) BLOCKRATE, NVL(ROUND(s.HANGSUSNUMBER * 100 / s.ALERTNUMBER, 2), 0) HANGRATE, NVL(ROUND(s.AUTHSUSNUMBER * 100 / s.ALERTNUMBER, 2), 0) AUTHRATE, NVL(ROUND(s.ALARMSUSNUMBER * 100 / s.ALERTNUMBER, 2), 0) ALERTRATE, NVL(ROUND(s.DEFECTSUSNUMBER * 100 / s.ALERTNUMBER, 2), 0) DEFRATE, NVL(ROUND(s.ERRORSUSNUMBER * 100 / s.ALERTNUMBER, 2), 0) ERRORRATE FROM (SELECT TO_CHAR(TO_DATE(r.TIME, 'yyyy-MM-dd'), 'yyyy-MM-dd') ALERTDATE, NVL(SUM(r.ALERT_NUMBER), 0) ALERTNUMBER, NVL(SUM(r.TXN_NUMBER), 0) TXNNUMBER, NVL(ROUND(SUM(r.ALERT_NUMBER) * 100 / SUM(r.TXN_NUMBER), 2), 0) TXNALERTRATE, NVL(SUM(r.ALERT_SUS_NUMBER), 0) ALERTSUSNUMBER, NVL(ROUND(SUM(r.TXN_RUNTIME_AVG * r.TXN_NUMBER) / SUM(r.TXN_NUMBER), 2), 0) AVGTIME, NVL(ROUND(MAX(r.TXN_RUNTIME_MAX), 2), 0) MAXTIME, NVL(ROUND(MIN(r.TXN_RUNTIME_MIN), 2), 0) MINTIME, NVL(SUM(r.BLOCK_NUMBER), 0) BLOCKSUSNUMBER, NVL(SUM(r.HANG_NUMBER), 0) HANGSUSNUMBER, NVL(SUM(r.AUTH_NUMBER), 0) AUTHSUSNUMBER, NVL(SUM(r.ALARM_NUMBER), 0) ALARMSUSNUMBER, NVL(SUM(r.DEFECT_NUMBER), 0) DEFECTSUSNUMBER, NVL(SUM(r.ERROR_NUMBER), 0) ERRORSUSNUMBER FROM REPORT_THEME_TXN_STAR_ALERT r WHERE 1 = 1 ]]></entry>
	<!-- 日期报表(按天统计)sql -->
	<entry key="report.date.day.list"><![CDATA[ SELECT a.*, (CASE WHEN b.SUMTXN = '0' THEN 0 ELSE NVL(ROUND(a.TXNNUMBER * 100 / b.SUMTXN, 2), 0) END) TXNRATE, (CASE WHEN b.SUMALERT = '0' THEN 0 ELSE NVL(ROUND(a.ALERTNUMBER * 100 / b.SUMALERT, 2), 0) END) AS ALERTNUMRATE FROM (SELECT s.ALERTDATE, s.ALERTNUMBER, s.TXNNUMBER, s.TXNALERTRATE, s.ALERTSUSNUMBER, NVL(ROUND(s.ALERTSUSNUMBER * 100 / s.ALERTNUMBER, 2), 0) SUSRATE, s.AVGTIME, s.MAXTIME, s.MINTIME, NVL(ROUND(s.BLOCKSUSNUMBER * 100 / s.ALERTNUMBER, 2), 0) BLOCKRATE, NVL(ROUND(s.HANGSUSNUMBER * 100 / s.ALERTNUMBER, 2), 0) HANGRATE, NVL(ROUND(s.AUTHSUSNUMBER * 100 / s.ALERTNUMBER, 2), 0) AUTHRATE, NVL(ROUND(s.ALARMSUSNUMBER * 100 / s.ALERTNUMBER, 2), 0) ALERTRATE, NVL(ROUND(s.DEFECTSUSNUMBER * 100 / s.ALERTNUMBER, 2), 0) DEFRATE, NVL(ROUND(s.ERRORSUSNUMBER * 100 / s.ALERTNUMBER, 2), 0) ERRORRATE FROM (SELECT TO_CHAR(TO_DATE(r.TIME, 'yyyy-MM-dd'), 'yyyy') || '年' || TO_CHAR(TO_DATE(r.TIME, 'yyyy-MM-dd'), 'MM') || '月' || TO_CHAR(TO_DATE(r.TIME, 'yyyy-MM-dd'), 'dd') || '日' ALERTDATE, NVL(SUM(r.ALERT_NUMBER), 0) ALERTNUMBER, NVL(SUM(r.TXN_NUMBER), 0) TXNNUMBER, NVL(ROUND(SUM(r.ALERT_NUMBER) * 100 / SUM(r.TXN_NUMBER), 2), 0) TXNALERTRATE, NVL(SUM(r.ALERT_SUS_NUMBER), 0) ALERTSUSNUMBER, NVL(ROUND(SUM(r.TXN_RUNTIME_AVG * r.TXN_NUMBER) / SUM(r.TXN_NUMBER), 2), 0) AVGTIME, NVL(ROUND(MAX(r.TXN_RUNTIME_MAX), 2), 0) MAXTIME, NVL(ROUND(MIN(r.TXN_RUNTIME_MIN), 2), 0) MINTIME, NVL(SUM(r.BLOCK_NUMBER), 0) BLOCKSUSNUMBER, NVL(SUM(r.HANG_NUMBER), 0) HANGSUSNUMBER, NVL(SUM(r.AUTH_NUMBER), 0) AUTHSUSNUMBER, NVL(SUM(r.ALARM_NUMBER), 0) ALARMSUSNUMBER, NVL(SUM(r.DEFECT_NUMBER), 0) DEFECTSUSNUMBER, NVL(SUM(r.ERROR_NUMBER), 0) ERRORSUSNUMBER FROM REPORT_THEME_TXN_STAR_ALERT r WHERE 1 = 1 ]]></entry>
	<entry key="report.date.day.list.groupby"><![CDATA[ group by to_char(to_date(r.TIME,'yyyy-MM-dd'),'yyyy') ,to_char(to_date(r.TIME,'yyyy-MM-dd'),'MM') ,to_char(to_date(r.TIME,'yyyy-MM-dd'),'dd')]]></entry>
	<!-- 日期报表(按周统计)sql -->
	<entry key="report.date.week.list"><![CDATA[ SELECT a.*, (CASE WHEN b.SUMTXN = '0' THEN 0 ELSE NVL(ROUND(a.TXNNUMBER * 100 / b.SUMTXN, 2), 0) END) TXNRATE, (CASE WHEN b.SUMALERT = '0' THEN 0 ELSE NVL(ROUND(a.ALERTNUMBER * 100 / b.SUMALERT, 2), 0) END) AS ALERTNUMRATE FROM (SELECT s.ALERTDATE, s.ALERTNUMBER, s.TXNNUMBER, s.TXNALERTRATE, s.ALERTSUSNUMBER, NVL(ROUND(s.ALERTSUSNUMBER * 100 / s.ALERTNUMBER, 2), 0) SUSRATE, s.AVGTIME, s.MAXTIME, s.MINTIME, NVL(ROUND(s.BLOCKSUSNUMBER * 100 / s.ALERTNUMBER, 2), 0) BLOCKRATE, NVL(ROUND(s.HANGSUSNUMBER * 100 / s.ALERTNUMBER, 2), 0) HANGRATE, NVL(ROUND(s.AUTHSUSNUMBER * 100 / s.ALERTNUMBER, 2), 0) AUTHRATE, NVL(ROUND(s.ALARMSUSNUMBER * 100 / s.ALERTNUMBER, 2), 0) ALERTRATE, NVL(ROUND(s.DEFECTSUSNUMBER * 100 / s.ALERTNUMBER, 2), 0) DEFRATE, NVL(ROUND(s.ERRORSUSNUMBER * 100 / s.ALERTNUMBER, 2), 0) ERRORRATE FROM (SELECT TO_CHAR(TO_DATE(r.TIME, 'yyyy-MM-dd'), 'yyyy') || '年 ' || TO_CHAR(TO_DATE(r.TIME, 'yyyy-MM-dd'), 'MM') || '月 第' || (TO_CHAR(TO_DATE(r.TIME, 'yyyy-MM-dd'), 'iw') - TO_CHAR(TO_DATE(TO_CHAR(TO_DATE(r.TIME, 'yyyy-MM-dd'), 'yyyy-MM-"01"'), 'yyyy-MM-dd'), 'iw') + 1) || '周 ' ALERTDATE, NVL(SUM(r.ALERT_NUMBER), 0) ALERTNUMBER, NVL(SUM(r.TXN_NUMBER), 0) TXNNUMBER, NVL(ROUND(SUM(r.ALERT_NUMBER) * 100 / SUM(r.TXN_NUMBER), 2), 0) TXNALERTRATE, NVL(SUM(r.ALERT_SUS_NUMBER), 0) ALERTSUSNUMBER, NVL(ROUND(SUM(r.TXN_RUNTIME_AVG * r.TXN_NUMBER) / SUM(r.TXN_NUMBER), 2), 0) AVGTIME, NVL(ROUND(MAX(r.TXN_RUNTIME_MAX), 2), 0) MAXTIME, NVL(ROUND(MIN(r.TXN_RUNTIME_MIN), 2), 0) MINTIME, NVL(SUM(r.BLOCK_NUMBER), 0) BLOCKSUSNUMBER, NVL(SUM(r.HANG_NUMBER), 0) HANGSUSNUMBER, NVL(SUM(r.AUTH_NUMBER), 0) AUTHSUSNUMBER, NVL(SUM(r.ALARM_NUMBER), 0) ALARMSUSNUMBER, NVL(SUM(r.DEFECT_NUMBER), 0) DEFECTSUSNUMBER, NVL(SUM(r.ERROR_NUMBER), 0) ERRORSUSNUMBER FROM REPORT_THEME_TXN_STAR_ALERT r WHERE 1 = 1 ]]></entry>
	<entry key="report.date.week.list.groupby"><![CDATA[ GROUP BY to_char(to_date(r.TIME,'yyyy-MM-dd'), 'yyyy'),to_char(to_date(r.TIME,'yyyy-MM-dd'), 'MM'),(to_char(to_date(r.TIME,'yyyy-MM-dd'), 'iw')-to_char(to_date(to_char(to_date(r.TIME,'yyyy-MM-dd'), 'yyyy-MM-\"01\"'),'yyyy-MM-dd'), 'iw')+1) ]]></entry>
	<!-- 日期报表(按月统计)sql -->
	<entry key="report.date.month.list"><![CDATA[ SELECT a.*, (CASE WHEN b.SUMTXN = '0' THEN 0 ELSE NVL(ROUND(a.TXNNUMBER * 100 / b.SUMTXN, 2), 0) END) TXNRATE, (CASE WHEN b.SUMALERT = '0' THEN 0 ELSE NVL(ROUND(a.ALERTNUMBER * 100 / b.SUMALERT, 2), 0) END) AS ALERTNUMRATE FROM (SELECT s.ALERTDATE, s.ALERTNUMBER, s.TXNNUMBER, s.TXNALERTRATE, s.ALERTSUSNUMBER, NVL(ROUND(s.ALERTSUSNUMBER * 100 / s.ALERTNUMBER, 2), 0) SUSRATE, s.AVGTIME, s.MAXTIME, s.MINTIME, NVL(ROUND(s.BLOCKSUSNUMBER * 100 / s.ALERTNUMBER, 2), 0) BLOCKRATE, NVL(ROUND(s.HANGSUSNUMBER * 100 / s.ALERTNUMBER, 2), 0) HANGRATE, NVL(ROUND(s.AUTHSUSNUMBER * 100 / s.ALERTNUMBER, 2), 0) AUTHRATE, NVL(ROUND(s.ALARMSUSNUMBER * 100 / s.ALERTNUMBER, 2), 0) ALERTRATE, NVL(ROUND(s.DEFECTSUSNUMBER * 100 / s.ALERTNUMBER, 2), 0) DEFRATE, NVL(ROUND(s.ERRORSUSNUMBER * 100 / s.ALERTNUMBER, 2), 0) ERRORRATE FROM (SELECT TO_CHAR(TO_DATE(r.TIME, 'yyyy-MM-dd'), 'yyyy') || '年' || TO_CHAR(TO_DATE(r.TIME, 'yyyy-MM-dd'), 'MM') || '月 ' ALERTDATE, NVL(SUM(r.ALERT_NUMBER), 0) ALERTNUMBER, NVL(SUM(r.TXN_NUMBER), 0) TXNNUMBER, NVL(ROUND(SUM(r.ALERT_NUMBER) * 100 / SUM(r.TXN_NUMBER), 2), 0) TXNALERTRATE, NVL(SUM(r.ALERT_SUS_NUMBER), 0) ALERTSUSNUMBER, NVL(ROUND(SUM(r.TXN_RUNTIME_AVG * r.TXN_NUMBER) / SUM(r.TXN_NUMBER), 2), 0) AVGTIME, NVL(ROUND(MAX(r.TXN_RUNTIME_MAX), 2), 0) MAXTIME, NVL(ROUND(MIN(r.TXN_RUNTIME_MIN), 2), 0) MINTIME, NVL(SUM(r.BLOCK_NUMBER), 0) BLOCKSUSNUMBER, NVL(SUM(r.HANG_NUMBER), 0) HANGSUSNUMBER, NVL(SUM(r.AUTH_NUMBER), 0) AUTHSUSNUMBER, NVL(SUM(r.ALARM_NUMBER), 0) ALARMSUSNUMBER, NVL(SUM(r.DEFECT_NUMBER), 0) DEFECTSUSNUMBER, NVL(SUM(r.ERROR_NUMBER), 0) ERRORSUSNUMBER FROM REPORT_THEME_TXN_STAR_ALERT r WHERE 1 = 1 ]]></entry>
	<entry key="report.date.month.list.groupby"><![CDATA[ GROUP BY to_char(to_date(r.TIME,'yyyy-MM-dd'), 'yyyy'),to_char(to_date(r.TIME,'yyyy-MM-dd'), 'MM') ]]></entry>
	
	<entry key="report.date.txn.star.alert"><![CDATA[ SELECT SUM(r.TXN_NUMBER) SUMTXN, NVL(SUM(r.ALERT_NUMBER), 0) SUMALERT FROM REPORT_THEME_TXN_STAR_ALERT r WHERE 1 = 1 ]]></entry>
	
	<!-- 地区报表sql -->
	<entry key="report.area.list"><![CDATA[ SELECT a.*, (CASE WHEN b.SUMTXN = '0' THEN 0 ELSE NVL(ROUND(a.TXNNUMBER * 100 / b.SUMTXN, 2), 0) END) TXNRATE, (CASE WHEN b.SUMALERT = '0' THEN 0 ELSE NVL(ROUND(a.ALERTNUMBER * 100 / b.SUMALERT, 2), 0) END) AS ALERTNUMRATE FROM (SELECT s.REGIONNAME, s.REGIONCODE, s.ALERTNUMBER, s.TXNNUMBER, NVL(ROUND(s.ALERTNUMBER * 100 / s.TXNNUMBER, 2), 0) TXNALERTRATE, s.ALERTSUSNUMBER, NVL(ROUND(s.ALERTSUSNUMBER * 100 / s.ALERTNUMBER, 2), 0) SUSRATE, s.AVGTIME, s.MAXTIME, s.MINTIME, NVL(ROUND(s.BLOCKNUMBER * 100 / s.ALERTNUMBER, 2), 0) BLOCKRATE, NVL(ROUND(s.HANGNUMBER * 100 / s.ALERTNUMBER, 2), 0) HANGRATE, NVL(ROUND(s.AUTHNUMBER * 100 / s.ALERTNUMBER, 2), 0) AUTHRATE, NVL(ROUND(s.ALARMNUMBER * 100 / s.ALERTNUMBER, 2), 0) ALERTRATE, NVL(ROUND(s.DEFECTNUMBER * 100 / s.ALERTNUMBER, 2), 0) DEFRATE, NVL(ROUND(s.ERRORNUMBER * 100 / s.ALERTNUMBER, 2), 0) ERRORRATE FROM (SELECT re.REGIONNAME REGIONNAME, re.REGIONCODE REGIONCODE, NVL(SUM(r.ALERT_NUMBER), 0) ALERTNUMBER, NVL(SUM(r.TXN_NUMBER), 0) TXNNUMBER, NVL(SUM(r.ALERT_SUS_NUMBER), 0) ALERTSUSNUMBER, NVL(ROUND(SUM(r.TXN_RUNTIME_AVG * r.txn_number) / sum(r.txn_number), 2), 0) AVGTIME, NVL(ROUND(MAX(r.TXN_RUNTIME_MAX), 2), 0) MAXTIME, NVL(ROUND(MIN(r.TXN_RUNTIME_MIN), 2), 0) MINTIME, NVL(SUM(r.BLOCK_NUMBER), 0) BLOCKNUMBER, NVL(SUM(r.HANG_NUMBER), 0) HANGNUMBER, NVL(SUM(r.AUTH_NUMBER), 0) AUTHNUMBER, NVL(SUM(r.ALARM_NUMBER), 0) ALARMNUMBER, NVL(SUM(r.DEFECT_NUMBER), 0) DEFECTNUMBER, NVL(SUM(r.ERROR_NUMBER), 0) ERRORNUMBER FROM REPORT_THEME_TXN_STAR_ALERT r JOIN REPORT_THEME_PUB_REGION re ON r.REGIONCODE = re.REGIONCODE WHERE 1 = 1 ]]></entry>
	<entry key="report.city.list"><![CDATA[ select a.*, (case when b.sumtxn = '0' then 0 else nvl(ROUND(a.TXNNUMBER * 100 / b.sumtxn, 2), 0) end) txnrate, (case when b.sumalert = '0' then 0 else nvl(ROUND(a.ALERTNUMBER * 100 / b.sumalert, 2), 0) end) as alertnumrate from (select c.CITYNAME CITYNAME,r.CITYCODE CITYCODE,nvl(sum(r.alert_number),0) ALERTNUMBER,nvl(sum(r.TXN_NUMBER),0) TXNNUMBER,  nvl(ROUND(sum(r.alert_number)*100/sum(r.TXN_NUMBER),2),0)  TXNALERTRATE , nvl(sum(r.ALERT_SUS_NUMBER),0) ALERTSUSNUMBER,  nvl(ROUND(sum(r.ALERT_SUS_NUMBER)*100/sum(r.alert_number),2),0)  SUSRATE,  NVL(ROUND(SUM(r.TXN_RUNTIME_AVG * r.txn_number) / sum(r.txn_number), 2), 0) AVGTIME, nvl(ROUND(max(r.Txn_Runtime_Max),2),0) MAXTIME, nvl(ROUND(min(r.TXN_RUNTIME_MIN),2),0) MINTIME, nvl(ROUND(sum(r.BLOCK_NUMBER)*100/sum(r.alert_number),2),0)  BLOCKRATE,  nvl(ROUND(sum(r.HANG_NUMBER)*100/sum(r.alert_number),2),0)  HANGRATE,  nvl(ROUND(sum(r.AUTH_NUMBER)*100/sum(r.alert_number),2),0)  AUTHRATE,  nvl(ROUND(sum(r.ALARM_NUMBER)*100/sum(r.alert_number),2),0) ALERTRATE,  nvl(ROUND(sum(r.DEFECT_NUMBER)*100/sum(r.alert_number),2),0) DEFRATE, nvl(ROUND(sum(r.ERROR_NUMBER)*100/sum(r.alert_number),2),0)  ERRORRATE FROM report_theme_txn_star_alert r join REPORT_THEME_PUB_CITY c on r.citycode=c.citycode where 1=1 ]]></entry>
	<!--======================运行报表结束==========================-->
	<!-- 自定义查询  -->
	
	<!--  查询交易下最大的统计名称+1 -->
	<entry key="tms.stat.queryMaxStatName"><![CDATA[ select 'S' || convert(varchar,isnull((max(convert(numeric,substring(STAT_NAME,2,datalength(STAT_NAME)-1))) + 1),1)) maxStatName from TMS_COM_STAT]]></entry>
	
	<!--  查询交易下最大的规则名称+1 -->
	<entry key="tms.rule.queryMaxRuleName"><![CDATA[ select 'R' || convert(varchar,isnull((max(convert(numeric,substring(RULE_NAME,2,datalength(RULE_NAME)-1))) + 1),0)) maxRuleName from TMS_COM_RULE where RULE_TXN=?]]></entry>
	
	<!--  规则有效性更新 -->
	<entry key="tms.rule.updateRuleEnable"><![CDATA[ update tms_com_rule set rule_enable = DECODE(rule_enable,'0','1','1','0') where rule_id = ? ]]></entry>
	
	<entry key="tms.auth.query"><![CDATA[ select auth.*,record.real_oper from tms_mgr_authinfo auth,tms_mgr_authrecord record where record.auth_id = convert(varchar,auth.auth_id) and query_pkvalue = ? and module_id='tranConf' and auth_status='0' and record.real_oper = 'd' and record.is_main = '1']]></entry>

	<!-- IP地址维护 -->
	<!-- 向TMS_MGR_LOB表中插入数据 -->
	<entry key="tms.ip.insertMgrLog">insert into TMS_MGR_LOB(ID,NAME,DATA) values(1,'IPData',NULL)</entry>
	
	<!-- 名单列表查询 -->
	<entry key="tms.roster.namelist"><![CDATA[ AND ROSTER.ROSTERDESC like '%'||:ROSTERDESC||'%']]></entry>
</properties>
