<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<!-- sql命名规范:tms +模块名称(dp,rule,stat)+sql名称 -->
<properties>
	
	<!-- 查询服务器列表 -->
	<entry key="TMS.SERVER.LIST"><![CDATA[SELECT T.* FROM TMS_RUN_SERVER T WHERE (TO_DATE(to_char(SYSDATE,'yyyy-MM-dd HH24:mi:ss'),'yyyy-MM-dd HH24:mi:ss') - TO_DATE(to_char(ACTIVETIME,'yyyy-MM-dd HH24:mi:ss'),'yyyy-MM-dd HH24:mi:ss'))* 24 * 60 * 60 * 1000 < T.PINGDELAY AND T.SERVTYPE=?]]></entry>
	
	<!--宏观报表展示SQL语句开始 -->
	<!-- 地图展示SQL -->
	<entry key="tms.report.s_alert_chinamap"><![CDATA[SELECT  tst.REGIONCODE regioncode,sum(tst.NUMALERTS ) mapvalue FROM TMS_STATMACRO_TXN tst WHERE tst.dateid >= :month and  tst.dateid< :nextmonth having sum(tst.NUMALERTS ) >0  GROUP BY  tst.regioncode  ORDER BY  mapvalue]]></entry>
	<entry key="tms.report.s_session_chinamap"><![CDATA[SELECT  tsv.REGIONCODE regioncode,sum(tsv.NUMSESSIONS ) mapvalue  FROM TMS_STATMACRO_VISITRISK tsv WHERE tsv.dateid >= :month and tsv.dateid< :nextmonth having sum(tsv.NUMSESSIONS ) >0  GROUP BY tsv.regioncode ORDER BY mapvalue]]></entry>
	<entry key="tms.report.s_user_chinamap"><![CDATA[SELECT  tsv.REGIONCODE regioncode,sum(tsv.NUMUSERS ) mapvalue  FROM TMS_STATMACRO_VISITRISK tsv WHERE tsv.dateid >= :month and tsv.dateid< :nextmonth having sum(tsv.NUMUSERS ) >0  GROUP BY  tsv.regioncode  ORDER BY  mapvalue]]></entry>
	<entry key="tms.report.s_txn_chinamap"><![CDATA[SELECT  tst.REGIONCODE regioncode,sum(tst.NUMTXNS ) mapvalue  FROM TMS_STATMACRO_TXN tst WHERE tst.dateid >= :month and tst.dateid< :nextmonth having sum(tst.NUMTXNS ) >0  GROUP BY  tst.regioncode  ORDER BY  mapvalue]]></entry>
	
	<!-- top5数据展示 -->
	<entry key="tms.report.s_top5"><![CDATA[SELECT tmr.regionname  REGIONNAME,sum(tsv.numusers) NUMUSERS,sum(tsv.numsessions) SESSIONS,sum(tst.numtxns) TXNS,sum(tst.numalerts) ALERTS,tmr.regioncode REGIONCODE FROM (select sum(v.numusers) numusers,sum(v.numsessions) numsessions,regioncode,dateid from TMS_STATMACRO_VISITRISK v group by v.dateid, v.regioncode) tsv,(select sum(t.numtxns) numtxns,sum(t.numalerts) numalerts,regioncode,dateid from TMS_STATMACRO_TXN t group by t.dateid,t.regioncode) tst,TMS_MGR_REGION tmr where tsv.dateid = tst.dateid and tsv.regioncode = tst.regioncode and tmr.regioncode = tsv.regioncode and tsv.DATEID >= :month and tsv.DATEID < :nextmonth group by tmr.regioncode,tmr.regionname]]></entry>

	<!-- 地区详细信息展示 -->
	<entry key="tms.report.s_detail_region_grid"><![CDATA[SELECT max(tmc.regioncode) REGIONCODE, nvl(tmc.CITYCODE,0) CITYCODE,nvl(tmc.cityname,'其他地区') CITYNAME,nvl(sum(tst.NUMUSERS),0) NUMUSERS,nvl(sum(tst.NUMSESSIONS),0) NUMSESSIONS,nvl(sum(tst.NUMTXNS),0) NUMTXNS ,nvl(sum(tst.NUMTRIGS),0) NUMTRIGS,nvl(sum(tst.NUMHITS),0) NUMHITS,nvl(sum(tst.NUMALERTS),0) NUMALERTS,nvl(sum(tst.NUMALERTSERIOUS),0) NUMALERTSERIOUS,nvl(sum(tst.NUMALERTHIGN),0) NUMALERTHIGN,nvl(sum(tst.NUMALERTMID),0) NUMALERTMID,nvl(sum(tst.NUMALERTLOW),0) NUMALERTLOW,nvl(sum(tst.NUMALERTNOR),0) NUMALERTNOR ,round(case when sum(nvl(tst.NUMTRIGS,0))=0 then 0 else sum(nvl(tst.NUMHITS,0))/sum(nvl(tst.NUMTRIGS,0)) end*100,2) HIT ,round(case when sum(nvl(tst.NUMTXNS,0))=0 then 0 else sum(nvl(tst.NUMALERTS,0))/sum(nvl(tst.NUMTXNS,0)) end*100,2)  ALERT FROM (select t1.citycode,t1.regioncode,t1.cityname from TMS_MGR_CITY t1 where t1.regioncode = :regioncode ) tmc LEFT JOIN (select max(t2.regioncode) REGIONCODE,CITYCODE,sum(t2.NUMUSERS) NUMUSERS,sum(t2.NUMSESSIONS) NUMSESSIONS,sum(t2.NUMTXNS) NUMTXNS ,sum(t2.NUMTRIGS) NUMTRIGS,sum(t2.NUMHITS) NUMHITS,sum(t2.NUMALERTS) NUMALERTS,sum(t2.NUMALERTSERIOUS) NUMALERTSERIOUS ,sum(t2.NUMALERTHIGN) NUMALERTHIGN,sum(t2.NUMALERTMID) NUMALERTMID,sum(t2.NUMALERTLOW) NUMALERTLOW,sum(t2.NUMALERTNOR) NUMALERTNOR ,round(case when sum(nvl(t2.NUMTRIGS,0))=0 then 0 else sum(nvl(t2.NUMHITS,0))/sum(nvl(t2.NUMTRIGS,0)) end*100,2) HIT ,round(case when sum(nvl(t2.NUMTXNS,0))=0 then 0 else sum(nvl(t2.NUMALERTS,0))/sum(nvl(t2.NUMTXNS,0)) end*100,2) ALERT from TMS_STATMACRO_REPORT t2 where t2.dateid >=:start_time and t2.dateid <=:end_time group by t2.citycode) tst ON tmc.citycode = tst.citycode group by tmc.citycode,tmc.cityname order by NUMUSERS desc]]></entry>	
	<entry key="tms.report.s_detail_region_chart"><![CDATA[SELECT max(tcd.nummonth) cmonth,max(tcd.numday) cday,nvl(sum(tst.numtxns),0) NUMTXNS ,nvl(sum(tst.numalerts),0) NUMALERTS ,nvl(sum(tst.numusers),0) NUMUSERS ,nvl(sum(tst.numsessions),0) NUMSESSIONS   from (select nummonth ,numday ,dateid from TMS_COM_DATE t1 where t1.dateid >= :start_time and t1.dateid<=:end_time) tcd  LEFT JOIN  (select t2.dateid, sum(t2.NUMUSERS) NUMUSERS,sum(t2.NUMSESSIONS) NUMSESSIONS,sum(t2.NUMTXNS) NUMTXNS ,sum(t2.NUMALERTS) NUMALERTS from TMS_STATMACRO_REPORT t2 where t2.regioncode = :regioncode group by t2.dateid) tst ON tst.dateid= tcd.dateid   where tcd.dateid >= :start_time and tcd.dateid<=:end_time group by tcd.dateid  order by to_number(tcd.dateid)]]></entry>
	<entry key="tms.report.s_contrast_city"><![CDATA[SELECT nvl(tmc.CITYCODE,0) CITYCODE,nvl(tmc.cityname,'其他地区') CITYNAME,nvl(sum(tst.NUMUSERS),0) NUMUSERS,nvl(sum(tst.NUMSESSIONS),0) NUMSESSIONS,nvl(sum(tst.NUMTXNS),0) NUMTXNS ,nvl(sum(tst.NUMTRIGS),0) NUMTRIGS,nvl(sum(tst.NUMHITS),0) NUMHITS,nvl(sum(tst.NUMALERTS),0) NUMALERTS,nvl(sum(tst.NUMALERTSERIOUS),0) NUMALERTSERIOUS  ,nvl(sum(tst.NUMALERTHIGN),0) NUMALERTHIGN,nvl(sum(tst.NUMALERTMID),0) NUMALERTMID,nvl(sum(tst.NUMALERTLOW),0) NUMALERTLOW,nvl(sum(tst.NUMALERTNOR),0) NUMALERTNOR  ,round(case when sum(nvl(tst.NUMTRIGS,0))=0 then 0 else sum(nvl(tst.NUMHITS,0))/sum(nvl(tst.NUMTRIGS,0)) end*100,2) HIT ,round(case when sum(nvl(tst.NUMTXNS,0))=0 then 0 else sum(nvl(tst.NUMALERTS,0))/sum(nvl(tst.NUMTXNS,0)) end*100,2) ALERT  FROM (select t1.citycode,t1.regioncode,t1.cityname from TMS_MGR_CITY t1 where (${regioncity}) ) tmc  LEFT JOIN (select max(t2.regioncode) REGIONCODE,CITYCODE,sum(t2.NUMUSERS) NUMUSERS,sum(t2.NUMSESSIONS) NUMSESSIONS,sum(t2.NUMTXNS) NUMTXNS ,sum(t2.NUMTRIGS) NUMTRIGS,sum(t2.NUMHITS) NUMHITS,sum(t2.NUMALERTS) NUMALERTS,sum(t2.NUMALERTSERIOUS) NUMALERTSERIOUS ,sum(t2.NUMALERTHIGN) NUMALERTHIGN,sum(t2.NUMALERTMID) NUMALERTMID,sum(t2.NUMALERTLOW) NUMALERTLOW,sum(t2.NUMALERTNOR) NUMALERTNOR ,round(case when sum(nvl(t2.NUMTRIGS,0))=0 then 0 else sum(nvl(t2.NUMHITS,0))/sum(nvl(t2.NUMTRIGS,0)) end*100,2) HIT ,round(case when sum(nvl(t2.NUMTXNS,0))=0 then 0 else sum(nvl(t2.NUMALERTS,0))/sum(nvl(t2.NUMTXNS,0)) end*100,2) ALERT from TMS_STATMACRO_REPORT t2 where t2.dateid >=:start_time and t2.dateid <=:end_time group by t2.citycode) tst ON tst.citycode = tmc.citycode  group by tmc.citycode,tmc.cityname order by NUMUSERS desc]]></entry>
	<entry key="tms.report.s_contrast_region"><![CDATA[SELECT nvl(tmc.regionCODE,0) regionCODE,max(nvl(tmc.regionname,'其他地区')) CITYNAME,nvl(sum(tst.NUMUSERS),0) NUMUSERS,nvl(sum(tst.NUMSESSIONS),0) NUMSESSIONS,nvl(sum(tst.NUMTXNS),0) NUMTXNS ,nvl(sum(tst.NUMTRIGS),0) NUMTRIGS,nvl(sum(tst.NUMHITS),0) NUMHITS,nvl(sum(tst.NUMALERTS),0) NUMALERTS,nvl(sum(tst.NUMALERTSERIOUS),0) NUMALERTSERIOUS  ,nvl(sum(tst.NUMALERTHIGN),0) NUMALERTHIGN,nvl(sum(tst.NUMALERTMID),0) NUMALERTMID,nvl(sum(tst.NUMALERTLOW),0) NUMALERTLOW,nvl(sum(tst.NUMALERTNOR),0) NUMALERTNOR  ,round(case when sum(nvl(tst.NUMTRIGS,0))=0 then 0 else sum(nvl(tst.NUMHITS,0))/sum(nvl(tst.NUMTRIGS,0)) end*100,2) HIT ,round(case when sum(nvl(tst.NUMTXNS,0))=0 then 0 else sum(nvl(tst.NUMALERTS,0))/sum(nvl(tst.NUMTXNS,0)) end*100,2) ALERT  FROM (select t1.regionname,t1.regioncode from Tms_Mgr_Region t1 where (${regioncity}) ) tmc  LEFT JOIN (select t2.regioncode,sum(t2.NUMUSERS) NUMUSERS,sum(t2.NUMSESSIONS) NUMSESSIONS,sum(t2.NUMTXNS) NUMTXNS ,sum(t2.NUMTRIGS) NUMTRIGS,sum(t2.NUMHITS) NUMHITS,sum(t2.NUMALERTS) NUMALERTS,sum(t2.NUMALERTSERIOUS) NUMALERTSERIOUS ,sum(t2.NUMALERTHIGN) NUMALERTHIGN,sum(t2.NUMALERTMID) NUMALERTMID,sum(t2.NUMALERTLOW) NUMALERTLOW,sum(t2.NUMALERTNOR) NUMALERTNOR ,round(case when sum(nvl(t2.NUMTRIGS,0))=0 then 0 else sum(nvl(t2.NUMHITS,0))/sum(nvl(t2.NUMTRIGS,0)) end*100,2) HIT ,round(case when sum(nvl(t2.NUMTXNS,0))=0 then 0 else sum(nvl(t2.NUMALERTS,0))/sum(nvl(t2.NUMTXNS,0)) end*100,2) ALERT from TMS_STATMACRO_REPORT t2 where t2.dateid >=:start_time and t2.dateid <=:end_time group by t2.regioncode) tst    ON tst.regioncode = tmc.regioncode  group by tmc.regioncode order by NUMUSERS desc]]></entry>
	<!--宏观报表展示SQL语句结束 -->
	
	<!--============实时运行监控开始==============-->
	<!-- 实时告警监控SQL -->
	<entry key="tms.monitor.s_alert_chart"><![CDATA[ SELECT TO_CHAR (TIME / (1000 * 60 * 60 * 24) + TO_DATE ('1970-01-01 08:00:00', 'YYYY-MM-DD HH24:MI:SS'), 'HH24:MI') TIMEID, NUM0 + NUM2 + NUM5 + NUM7 + NUM9 NUMALL,NUM0, NUM2, NUM5,NUM7, NUM9  FROM (SELECT TIME,SUM (ALERT_NUM0) NUM0,SUM (ALERT_NUM1) NUM2,SUM (ALERT_NUM2) NUM5,SUM (ALERT_NUM3) NUM7,SUM (ALERT_NUM4) NUM9 FROM TMS_MONITOR_RISK_STAT WHERE TIME BETWEEN :oneHourAgoTime AND :currentTime  GROUP BY TIME)]]></entry>
	
		<!-- 规则运行监控SQL -->
	<entry key="tms.monitor.s_rule_temp_chart"><![CDATA[SELECT rule.rule_shortdesc ruledesc,t.txntype,t.txnnum,t.numhits,t.avgexec,(CASE txnnum WHEN 0 THEN 0 ELSE nvl(round(numhits * 100 / txnnum, 2), 0) END) rulerate FROM (select t1.TXNID txntype,t1.ruleid,t1.TXNNUM + nvl(t2.TXNNUM, 0) txnnum,t1.numhits,t1.avgexec from (SELECT TXNID,ruleid,SUM(Trig_number) txnnum,SUM(Hit_number) numhits,SUM(Trig_number * Rule_runtime_avg) / SUM(Trig_number) avgexec  FROM TMS_MONITOR_RULE_STAT s where exists(select 1 from tms_com_rule r where s.ruleid = r.RULE_ID) and time BETWEEN :oneHourAgoTime AND :currentTime GROUP BY TXNID, ruleid) t1 left join (SELECT TXNID, SUM(Trig_number) txnnum FROM TMS_MONITOR_RULE_STAT s where s.RULEID = '-1' and time BETWEEN :oneHourAgoTime AND :currentTime GROUP BY TXNID) t2 on t1.txnid = t2.txnid) t, tms_com_rule rule WHERE t.ruleid = rule.rule_id AND t.txnnum != 0 AND rule.rule_shortdesc LIKE '%' || :ruleName || '%']]></entry>
	<entry key="tms.monitor.s_rule_hour_chart"><![CDATA[SELECT rule.rule_shortdesc ruledesc, t.txntype, t.txnnum, t.numhits, t.avgexec, (CASE txnnum WHEN 0 THEN 0 ELSE nvl (round(numhits * 100 / txnnum, 2), 0) END) rulerate FROM  (select t1.TXNID txntype,t1.ruleid,t1.TXNNUM+nvl(t2.TXNNUM,0) txnnum,t1.numhits,t1.avgexec from (SELECT TXNID, ruleid, SUM(Trig_number) txnnum, SUM(Hit_number) numhits, SUM(Trig_number * Rule_runtime_avg) / SUM(Trig_number) avgexec FROM TMS_MONITOR_RULE_STAT s  where exists (select 1 from tms_com_rule r where s.ruleid = r.RULE_ID ) and time BETWEEN :hourAgoTime AND :currentTime  GROUP BY TXNID, ruleid) t1 left join (SELECT TXNID, SUM(Trig_number) txnnum FROM TMS_MONITOR_RULE_STAT s  where s.RULEID='-1' and time BETWEEN :hourAgoTime AND :currentTime GROUP BY TXNID) t2 on t1.txnid=t2.txnid)  t,tms_com_rule rule WHERE     t.ruleid = rule.rule_id AND t.txnnum != 0 AND rule.rule_shortdesc LIKE '%' || :ruleName || '%']]></entry>
	<!-- 交易运行监控SQL -->
	<entry key="tms.monitor.s_txn_temp_chart"><![CDATA[SELECT *  FROM (	SELECT TXNID TXNTYPE,SUM(TXN_NUMBER) NUMTXNS FROM TMS_MONITOR_TXN_AREA_STAT	WHERE TIME BETWEEN :oneHourAgoTime AND :currentTime	GROUP BY TXNID) tmp]]></entry>
	<entry key="tms.monitor.s_txn_hour_chart"><![CDATA[SELECT *  FROM (	SELECT TXNID TXNTYPE,SUM(TXN_NUMBER) NUMTXNS FROM TMS_MONITOR_TXN_AREA_STAT	WHERE TIME BETWEEN :hourAgoTime    AND :currentTime	GROUP BY TXNID) tmp]]></entry>
	<!-- 欺诈类型监控SQL -->
	<entry key="tms.monitor.s_fraud_temp_chart"><![CDATA[SELECT *  FROM (SELECT FRAUD_TYPE FRAUDTYPE,SUM(FRAUD_NUMBER) FRAUDNUMBER FROM TMS_MONITOR_TXN_FRAUD_STAT	WHERE TIME BETWEEN :oneHourAgoTime AND :currentTime	AND FRAUD_NUMBER > 0 GROUP BY FRAUD_TYPE) tmp]]></entry>
	<entry key="tms.monitor.s_fraud_hour_chart"><![CDATA[SELECT *  FROM (SELECT FRAUD_TYPE FRAUDTYPE,SUM(FRAUD_NUMBER) FRAUDNUMBER FROM TMS_MONITOR_TXN_FRAUD_STAT	WHERE TIME BETWEEN :hourAgoTime AND :currentTime	AND FRAUD_NUMBER > 0 GROUP BY FRAUD_TYPE) tmp]]></entry>
	
	<!-- 地图监控SQL -->
	<entry key="tms.monitor.s_map_temp_chart"><![CDATA[SELECT S.*,C.CITYNAME,C.LATITUDE,C.LONGITUDE,K.DP_NAME DISPOSALNAME FROM ( SELECT DS.COUNTRYCODE,DS.CITYCODE,DS.REGIONCODE,DS.DISPOSAL FROM TMS_MONITOR_TXN_DP_STAT DS WHERE DS.CITYCODE IS NOT NULL) S LEFT JOIN  TMS_MGR_CITY C ON S.CITYCODE = C.CITYCODE	LEFT JOIN (SELECT DP_CODE,DP_NAME FROM TMS_COM_DISPOSAL) K	ON S.DISPOSAL = K.DP_CODE]]></entry>
		
	<!-- 风险数据统计SQL -->
	<entry key="tms.monitor.s_risk_temp_chart"><![CDATA[SELECT '用户数' STNAME, count(DISTINCT traffic.userid) STVALUE FROM tms_run_trafficdata traffic WHERE traffic.ISRISK ='1' and traffic.TXNTIME BETWEEN :oneHourAgoTime AND :currentTime UNION ALL SELECT '会话数' STNAME, count(DISTINCT traffic.sessionid) STVALUE FROM tms_run_trafficdata traffic WHERE traffic.ISRISK ='1' and traffic.TXNTIME BETWEEN :oneHourAgoTime AND :currentTime UNION ALL SELECT '访问IP数' STNAME, count(DISTINCT traffic.ipaddr) STVALUE FROM tms_run_trafficdata traffic WHERE traffic.ISRISK ='1' and traffic.TXNTIME BETWEEN :oneHourAgoTime AND :currentTime UNION ALL SELECT '访问设备数' STNAME, count(DISTINCT traffic.deviceid) STVALUE FROM tms_run_trafficdata traffic WHERE traffic.ISRISK ='1' and traffic.TXNTIME BETWEEN :oneHourAgoTime AND :currentTime]]></entry>
	<entry key="tms.monitor.s_risk_hour_chart"><![CDATA[SELECT '用户数' STNAME, count(DISTINCT traffic.userid) STVALUE FROM tms_run_trafficdata traffic WHERE traffic.ISRISK = '1' AND traffic.TXNTIME BETWEEN :hourAgoTime AND :currentTime UNION ALL SELECT '会话数' STNAME, count(DISTINCT traffic.sessionid) STVALUE FROM tms_run_trafficdata traffic WHERE traffic.ISRISK = '1' AND traffic.TXNTIME BETWEEN :hourAgoTime AND :currentTime UNION ALL SELECT '访问IP数' STNAME, count(DISTINCT traffic.ipaddr) STVALUE FROM tms_run_trafficdata traffic WHERE traffic.ISRISK = '1' AND traffic.TXNTIME BETWEEN :hourAgoTime AND :currentTime UNION ALL SELECT '访问设备数' STNAME, count(DISTINCT traffic.deviceid) STVALUE FROM tms_run_trafficdata traffic WHERE traffic.ISRISK = '1' AND traffic.TXNTIME BETWEEN :hourAgoTime AND :currentTime]]></entry>
	
	<!--============实时运行监控结束==============-->
	
	<!-- 行为模式属性配置界面，交易属性结构下拉框 -->
	<entry key="tms.dp.listFeatureByTxnId.sql"><![CDATA[select '--'|| m.PROPNAME PROPNAME, f.TXNFEATUREID TXNFEATUREID, m.DATATYPE DATATYPE, f.TXNID c, m.PROPCODE d,'' e ,m.METAOBJID f, o.orderby g1, m.orderby g2    from TMS_DP_TXNFEATURE  f left join TMS_COM_METAOBJPROP  m on f.TXNPARAMID=m.METAOBJPROPID left join TMS_COM_METAOBJ o on o.METAOBJID=m.METAOBJID  where f.TXNID= :FtxnId  and f.PARAMSOURCE='0'  union  select '--'|| f.TXNPARAMNAME PROPNAME, f.TXNFEATUREID TXNFEATUREID,  f.TXNPARAMTYPE DATATYPE, f.TXNID c, f.TXNPARAMCODE d,'' e ,o.METAOBJID f, o.orderby g1, f.orderby g2   from TMS_DP_TXNFEATURE f   left join TMS_COM_METAOBJ o on o.METAOBJID=f.TXNPARAMGRPID    where f.TXNID= :StxnId and f.PARAMSOURCE='1'   union  select o.OBJNAME PROPNAME, '' TXNFEATUREID, '' DATATYPE, '' c, '' d, '' e, '' f, o.orderby g1, -1 g2    from TMS_COM_METAOBJ o   where o.METAOBJID in (select distinct TXNPARAMGRPID from TMS_DP_TXNFEATURE t where t.TXNID= :TtxnId ) order by g1,g2]]></entry>
	<!-- 行为模式列表页面 -->
	<entry key="tms.dp.listPattern.sql"><![CDATA[SELECT  p.PATTERNID, p.TXNID, p.PATTERNNAME, p.STATUS, p.CREATETIME, p.MODIFYTIME, c.CHANNELNAME ||'--'||  g.GROUPNAME||'--'||  t.TXNNAME as TXNNAME  FROM TMS_DP_PATTERN p left join TMS_DP_TXN t  on p.TXNID = t.TXNID left join TMS_DP_TXNGROUP g  on t.TXNGROUPID = g.TXNGROUPID left join TMS_DP_CHANNEL c  on g.CHANNELID = c.CHANNELID]]></entry>
	
	<!-- 通用sql -->
	<entry key="tms.common.systime"><![CDATA[SELECT TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS') DBSYSTIME FROM DUAL]]></entry>
	<entry key="tms.common.sequenceid"><![CDATA[SELECT ${SEQUENCENAME}.nextval SEQUENCEID FROM DUAL]]></entry>
	<entry key="tms.common.truncatetable"><![CDATA[truncate table ${TABLENAME}]]></entry>


	
	<!--======================运行报表开始==========================-->
	<!-- 交易报表sql -->
	<!-- mod by v1.5云版本 -->
	<entry key="report.txn.list"><![CDATA[SELECT s.* FROM (	SELECT a.*,nvl(b.FRAUDNUMBER, 0) FRAUDNUMBER ,nvl(b.NONFRAUDNUMBER, 0) NONFRAUDNUMBER FROM (SELECT MAX(r.TXNID) TXNID,MAX(r.DISPOSAL) DISPOSAL,nvl(SUM(r.DISPOSAL_NUM), 0) DISPOSALNUM,nvl(SUM(r.TXN_NUMBER), 0) TXNNUMBER	FROM REPORT_THEME_TXN_STAR_ALERT r	WHERE 1 = 1 ]]></entry>
	<entry key="report.txn.fraud.list"><![CDATA[GROUP BY r.TXNID,r.DISPOSAL) a LEFT JOIN (  SELECT MAX(r.TXNID) TXNID,MAX(r.DISPOSAL) DISPOSAL,SUM(CASE WHEN r.FRAUD_TYPE='00' THEN  0 ELSE r.FRAUD_NUMBER END) FRAUDNUMBER,SUM(CASE WHEN r.FRAUD_TYPE='00' THEN r.FRAUD_NUMBER ELSE 0 END) NONFRAUDNUMBER FROM report_theme_txn_fraud_star r	WHERE 1 = 1]]></entry>
	<!-- 规则报表sql -->
	<entry key="report.rule.list"><![CDATA[select a.*,(case when b.TRIGGERSUM = '0' then  0 else nvl(ROUND(a.TRIGGERNUM * 100 / b.TRIGGERSUM, 2), 0) end) TRIGGERRATE, (case when b.HITSUM = '0' then 0 else nvl(round(a.HITNUM * 100 / b.HITSUM, 2), 0) end) as HITNUMRATE from (select a1.*, nvl(a2.TRIGGERNUMBER, 0) TRIGGERNUM, (case when nvl(a2.TRIGGERNUMBER, 0) = '0' then 0 else nvl(round(a1.HITNUM * 100 / nvl(a2.TRIGGERNUMBER, 0), 2), 0) end) HITRATE from (select r.RULE_SHORTDESC RULENAME, txn.TAB_NAME TXNID,nvl(r.RULE_SCORE,0) SCORE, nvl(SUM(al.HIT_NUMBER),0) HITNUM, nvl(round(SUM(al.RULE_RUNTIME_AVG*al.TRIGGER_NUMBER)/SUM(al.TRIGGER_NUMBER),2),0) AVGTIME, nvl(round(max(al.RULE_RUNTIME_MAX),2),0) MAXTIME, nvl(round(min(al.RULE_RUNTIME_MIN),2),0) MINTIME from REPORT_THEME_RULE_STAR_ALERT al inner join REPORT_THEME_PUB_TXN txn on al.TXNID=txn.TAB_NAME inner join REPORT_THEME_PUB_RULE r on al.RULEID=r.RULE_ID inner join REPORT_THEME_PUB_CHANNEL c on txn.CHANN=c.CHANNELID where 1=1 ]]></entry>
	<!-- 日期报表sql -->
	<entry key="report.date.list"><![CDATA[ SELECT s.* FROM (SELECT a.*,nvl(b.FRAUDNUMBER, 0) FRAUDNUMBER ,nvl(b.NONFRAUDNUMBER, 0) NONFRAUDNUMBER FROM (SELECT TO_CHAR(TO_DATE(r.TIME, 'yyyy-MM-dd'), 'yyyy-MM-dd') ALERTDATE,MAX(r.DISPOSAL) DISPOSAL,nvl(SUM(r.DISPOSAL_NUM), 0) DISPOSALNUM,	nvl(SUM(r.TXN_NUMBER), 0) TXNNUMBER FROM REPORT_THEME_TXN_STAR_ALERT r WHERE 1=1 ]]></entry>
	<entry key="report.date.fraud.list"><![CDATA[) a LEFT JOIN (  SELECT TO_CHAR(TO_DATE(r.TIME, 'yyyy-MM-dd'), 'yyyy-MM-dd') ALERTDATE,MAX(r.DISPOSAL) DISPOSAL,SUM(CASE WHEN r.FRAUD_TYPE='00' THEN  0 ELSE r.FRAUD_NUMBER END) FRAUDNUMBER,SUM(CASE WHEN r.FRAUD_TYPE='00' THEN r.FRAUD_NUMBER ELSE 0 END) NONFRAUDNUMBER FROM REPORT_THEME_TXN_FRAUD_STAR r	WHERE 1 = 1]]></entry>
	<!-- 日期报表(按天统计)sql -->
	<entry key="report.date.day.list"><![CDATA[ SELECT s.* FROM (SELECT a.*,nvl(b.FRAUDNUMBER, 0) FRAUDNUMBER ,nvl(b.NONFRAUDNUMBER, 0) NONFRAUDNUMBER FROM (SELECT TO_CHAR(TO_DATE(r.TIME, 'yyyy-MM-dd'), 'yyyy') || '年' || TO_CHAR(TO_DATE(r.TIME, 'yyyy-MM-dd'), 'MM') || '月' || TO_CHAR(TO_DATE(r.TIME, 'yyyy-MM-dd'), 'dd') || '日'  ALERTDATE,MAX(r.DISPOSAL) DISPOSAL,nvl(SUM(r.DISPOSAL_NUM), 0) DISPOSALNUM,	nvl(SUM(r.TXN_NUMBER), 0) TXNNUMBER FROM REPORT_THEME_TXN_STAR_ALERT r WHERE 1=1 ]]></entry>
	<entry key="report.date.day.fraud.list"><![CDATA[) a LEFT JOIN (SELECT TO_CHAR(TO_DATE(r.TIME, 'yyyy-MM-dd'), 'yyyy') || '年' || TO_CHAR(TO_DATE(r.TIME, 'yyyy-MM-dd'), 'MM') || '月' || TO_CHAR(TO_DATE(r.TIME, 'yyyy-MM-dd'), 'dd') || '日' ALERTDATE,MAX(r.DISPOSAL) DISPOSAL,SUM(CASE WHEN r.FRAUD_TYPE='00' THEN  0 ELSE r.FRAUD_NUMBER END) FRAUDNUMBER,SUM(CASE WHEN r.FRAUD_TYPE='00' THEN r.FRAUD_NUMBER ELSE 0 END) NONFRAUDNUMBER FROM REPORT_THEME_TXN_FRAUD_STAR r	WHERE 1 = 1]]></entry>
	<entry key="report.date.day.list.groupby"><![CDATA[ group by to_char(to_date(r.TIME,'yyyy-MM-dd'),'yyyy') ,to_char(to_date(r.TIME,'yyyy-MM-dd'),'MM') ,to_char(to_date(r.TIME,'yyyy-MM-dd'),'dd'),r.DISPOSAL ]]></entry>
	<!-- 日期报表(按周统计)sql -->
	<entry key="report.date.week.list"><![CDATA[ SELECT s.* FROM (SELECT a.*,nvl(b.FRAUDNUMBER, 0) FRAUDNUMBER ,nvl(b.NONFRAUDNUMBER, 0) NONFRAUDNUMBER FROM(SELECT TO_CHAR(TO_DATE(r.TIME, 'yyyy-MM-dd'), 'yyyy') || '年 ' || TO_CHAR(TO_DATE(r.TIME, 'yyyy-MM-dd'), 'MM') || '月 第' || (TO_CHAR(TO_DATE(r.TIME, 'yyyy-MM-dd'), 'iw') - TO_CHAR(TO_DATE(TO_CHAR(TO_DATE(r.TIME, 'yyyy-MM-dd'), 'yyyy-MM-"01"'), 'yyyy-MM-dd'), 'iw') + 1) || '周 ' ALERTDATE,MAX(r.DISPOSAL) DISPOSAL,nvl(SUM(r.DISPOSAL_NUM), 0) DISPOSALNUM,	nvl(SUM(r.TXN_NUMBER), 0) TXNNUMBER FROM REPORT_THEME_TXN_STAR_ALERT r WHERE 1=1 ]]></entry>
	<entry key="report.date.week.fraud.list"><![CDATA[) a LEFT JOIN (SELECT TO_CHAR(TO_DATE(r.TIME, 'yyyy-MM-dd'), 'yyyy') || '年 ' || TO_CHAR(TO_DATE(r.TIME, 'yyyy-MM-dd'), 'MM') || '月 第' || (TO_CHAR(TO_DATE(r.TIME, 'yyyy-MM-dd'), 'iw') - TO_CHAR(TO_DATE(TO_CHAR(TO_DATE(r.TIME, 'yyyy-MM-dd'), 'yyyy-MM-"01"'), 'yyyy-MM-dd'), 'iw') + 1) || '周 ' ALERTDATE,MAX(r.DISPOSAL) DISPOSAL,SUM(CASE WHEN r.FRAUD_TYPE='00' THEN  0 ELSE r.FRAUD_NUMBER END) FRAUDNUMBER,SUM(CASE WHEN r.FRAUD_TYPE='00' THEN r.FRAUD_NUMBER ELSE 0 END) NONFRAUDNUMBER FROM report_theme_txn_fraud_star r	WHERE 1 = 1]]></entry>
	<entry key="report.date.week.list.groupby"><![CDATA[ GROUP BY to_char(to_date(r.TIME,'yyyy-MM-dd'), 'yyyy'),to_char(to_date(r.TIME,'yyyy-MM-dd'), 'MM'),(to_char(to_date(r.TIME,'yyyy-MM-dd'), 'iw')-to_char(to_date(to_char(to_date(r.TIME,'yyyy-MM-dd'), 'yyyy-MM-"01"'),'yyyy-MM-dd'), 'iw')+1),r.DISPOSAL ]]></entry>
	<!-- 日期报表(按月统计)sql -->
	<entry key="report.date.month.list"><![CDATA[ SELECT s.* FROM (SELECT a.*,nvl(b.FRAUDNUMBER, 0) FRAUDNUMBER ,nvl(b.NONFRAUDNUMBER, 0) NONFRAUDNUMBER FROM(SELECT TO_CHAR(TO_DATE(r.TIME, 'yyyy-MM-dd'), 'yyyy') || '年' || TO_CHAR(TO_DATE(r.TIME, 'yyyy-MM-dd'), 'MM') || '月 ' ALERTDATE,MAX(r.DISPOSAL) DISPOSAL,nvl(SUM(r.DISPOSAL_NUM), 0) DISPOSALNUM,	nvl(SUM(r.TXN_NUMBER), 0) TXNNUMBER FROM REPORT_THEME_TXN_STAR_ALERT r WHERE 1=1 ]]></entry>
	<entry key="report.date.month.fraud.list"><![CDATA[) a LEFT JOIN (SELECT TO_CHAR(TO_DATE(r.TIME, 'yyyy-MM-dd'), 'yyyy') || '年' || TO_CHAR(TO_DATE(r.TIME, 'yyyy-MM-dd'), 'MM') || '月 ' ALERTDATE,MAX(r.DISPOSAL) DISPOSAL,SUM(CASE WHEN r.FRAUD_TYPE='00' THEN  0 ELSE r.FRAUD_NUMBER END) FRAUDNUMBER,SUM(CASE WHEN r.FRAUD_TYPE='00' THEN r.FRAUD_NUMBER ELSE 0 END) NONFRAUDNUMBER FROM REPORT_THEME_TXN_FRAUD_STAR r	WHERE 1 = 1]]></entry>
	<entry key="report.date.month.list.groupby"><![CDATA[ GROUP BY to_char(to_date(r.TIME,'yyyy-MM-dd'), 'yyyy'),to_char(to_date(r.TIME,'yyyy-MM-dd'), 'MM'),r.DISPOSAL ]]></entry>
	
	<entry key="report.date.txn.star.alert"><![CDATA[ SELECT SUM(r.TXN_NUMBER) SUMTXN, nvl(SUM(r.ALERT_NUMBER), 0) SUMALERT FROM REPORT_THEME_TXN_STAR_ALERT r WHERE 1 = 1 ]]></entry>
	
	<!-- 地区报表sql -->
	<entry key="report.area.list"><![CDATA[ SELECT s.* FROM (SELECT a.*,nvl(b.FRAUDNUMBER, 0) FRAUDNUMBER ,nvl(b.NONFRAUDNUMBER, 0) NONFRAUDNUMBER FROM(SELECT MAX(re.REGIONNAME) REGIONNAME, r.REGIONCODE REGIONCODE,MAX(r.DISPOSAL) DISPOSAL,nvl(SUM(r.DISPOSAL_NUM), 0) DISPOSALNUM, nvl(SUM(r.TXN_NUMBER), 0) TXNNUMBER FROM REPORT_THEME_TXN_STAR_ALERT r JOIN REPORT_THEME_PUB_REGION re ON r.REGIONCODE = re.REGIONCODE WHERE 1 = 1 ]]></entry>
	<entry key="report.area.fraud.list"><![CDATA[) a LEFT JOIN (SELECT r.REGIONCODE REGIONCODE,MAX(r.DISPOSAL) DISPOSAL,SUM(CASE WHEN r.FRAUD_TYPE='00' THEN  0 ELSE r.FRAUD_NUMBER END) FRAUDNUMBER,SUM(CASE WHEN r.FRAUD_TYPE='00' THEN r.FRAUD_NUMBER ELSE 0 END) NONFRAUDNUMBER FROM REPORT_THEME_TXN_FRAUD_STAR r	WHERE 1 = 1]]></entry>
	<entry key="report.city.list"><![CDATA[ SELECT s.* FROM (SELECT a.*,nvl(b.FRAUDNUMBER, 0) FRAUDNUMBER ,nvl(b.NONFRAUDNUMBER, 0) NONFRAUDNUMBER FROM(SELECT MAX(rc.CITYNAME) CITYNAME,r.CITYCODE CITYCODE,MAX(r.DISPOSAL) DISPOSAL,nvl(SUM(r.DISPOSAL_NUM), 0) DISPOSALNUM, nvl(SUM(r.TXN_NUMBER), 0) TXNNUMBER FROM REPORT_THEME_TXN_STAR_ALERT r JOIN REPORT_THEME_PUB_CITY rc ON R.CITYCODE=rc.CITYCODE WHERE 1=1 ]]></entry>
	<entry key="report.city.fraud.list"><![CDATA[) a LEFT JOIN (SELECT r.CITYCODE CITYCODE,MAX(r.DISPOSAL) DISPOSAL,SUM(CASE WHEN r.FRAUD_TYPE='00' THEN  0 ELSE r.FRAUD_NUMBER END) FRAUDNUMBER,SUM(CASE WHEN r.FRAUD_TYPE='00' THEN r.FRAUD_NUMBER ELSE 0 END) NONFRAUDNUMBER FROM REPORT_THEME_TXN_FRAUD_STAR r	WHERE 1 = 1]]></entry>
	
	<!-- 模型评价报表导出sql -->
	<entry key="report.riskmodel.export"><![CDATA[ SELECT M.TXNID,M.STARTDATE,MAX(M.F1SCORE) M_FLSCORE_MAX,MIN(M.F1SCORE) M_FLSCORE_MIN,TO_NUMBER(AVG(M.F1SCORE)) M_FLSCORE_AVG , 0 R_FLSCORE_MAX,0 R_FLSCORE_MIN,0 R_FLSCORE_AVG FROM TMS_COM_MTRAINHIS M ]]></entry>

	<!-- 模型评价报表查询sql -->
	<entry key="report.riskmodel.list"><![CDATA[ SELECT M.TXNID,M.STARTDATE,MAX(M.F1SCORE) M_FLSCORE_MAX,MIN(M.F1SCORE) M_FLSCORE_MIN,round(AVG(M.F1SCORE),2) M_FLSCORE_AVG , 0 R_FLSCORE_MAX,0 R_FLSCORE_MIN,0 R_FLSCORE_AVG FROM TMS_COM_MTRAINHIS M WHERE M.TXNID = :TXNID ]]></entry>
	
	<!-- 欺诈类型报表查询 -->
	<entry key="report.fraud.list"><![CDATA[ SELECT s.* FROM (SELECT r.FRAUD_TYPE FRAUDTYPE,MAX(r.DISPOSAL) DISPOSAL,	nvl(SUM(r.FRAUD_NUMBER), 0) FRAUDNUMBER FROM REPORT_THEME_TXN_FRAUD_STAR r WHERE 1=1 ]]></entry>
	
	<!-- 交易运行效率 -->
	<entry key="report.txn.time.list"><![CDATA[ SELECT  r.TXNID,nvl(SUM(r.RISK_EVAL_NUMBER), 0) RISK_EVAL_NUMBER,nvl(AVG(r.RISK_EVAL_RUNTIME_AVG), 0) RISK_EVAL_RUNTIME_AVG, nvl(MAX(r.RISK_EVAL_RUNTIME_MAX), 0) RISK_EVAL_RUNTIME_MAX,nvl(MIN(r.RISK_EVAL_RUNTIME_MIN), 0) RISK_EVAL_RUNTIME_MIN,nvl(AVG(r.RISK_EVAL_TPM_AVG), 0) RISK_EVAL_TPM_AVG,nvl(MAX(r.RISK_EVAL_TPM_MAX), 0) RISK_EVAL_TPM_MAX,nvl(MIN(r.RISK_EVAL_TPM_MIN), 0) RISK_EVAL_TPM_MIN,nvl(SUM(r.RISK_CFM_NUMBER), 0) RISK_CFM_NUMBER,nvl(AVG(r.RISK_CFM_RUNTIME_AVG), 0) RISK_CFM_RUNTIME_AVG,nvl(MAX(r.RISK_CFM_RUNTIME_MAX), 0) RISK_CFM_RUNTIME_MAX,nvl(MIN(r.RISK_CFM_RUNTIME_MIN), 0) RISK_CFM_RUNTIME_MIN,nvl(AVG(r.RISK_CFM_TPM_AVG), 0) RISK_CFM_TPM_AVG,nvl(MAX(r.RISK_CFM_TPM_MAX), 0) RISK_CFM_TPM_MAX,nvl(MIN(r.RISK_CFM_TPM_MIN), 0) RISK_CFM_TPM_MIN FROM report_theme_txn_time_stat r  WHERE 1=1 ]]></entry>
	
	<!--======================运行报表结束==========================-->
	
	<!-- 自定义查询  -->
	
	<!--  查询交易下最大的统计名称+1 -->
	<entry key="tms.stat.queryMaxStatName"><![CDATA[ select 'S' || nvl((max(to_number(substr(STAT_NAME,2,length(STAT_NAME)-1))) + 1),1) maxStatName from TMS_COM_STAT]]></entry>
	
	<!--  查询交易下最大的规则名称+1 -->
	<entry key="tms.rule.queryMaxRuleName"><![CDATA[ select 'R' || nvl((max(to_number(substr(RULE_NAME,2,length(RULE_NAME)-1))) + 1),0) maxRuleName from TMS_COM_RULE where RULE_TXN=?]]></entry>
	
	<!--  规则有效性更新 -->
	<entry key="tms.rule.updateRuleEnable"><![CDATA[ update tms_com_rule set rule_enable = DECODE(rule_enable,'0','1','1','0') where rule_id = ? ]]></entry>
	
	<!-- 通过交易属性代码及交易代码查询交易属性信息 -->
	<!-- <entry key="tms.pub.queryTxnFeature"><![CDATA[ SELECT * FROM TMS_COM_FD F WHERE EXISTS(SELECT 1 FROM (SELECT M.TAB_NAME FROM TMS_COM_TAB M START WITH M.TAB_NAME=:TAB_NAME CONNECT BY PRIOR M.PARENT_TAB=M.TAB_NAME)M1 WHERE F.TAB_NAME=M1.TAB_NAME) AND  REF_NAME=:REF_NAME ORDER BY TAB_NAME DESC ]]></entry>-->
	
	<!-- 通过交易属性代码及交易代码查询交易属性信息 -->
	<!-- <entry key="tms.userpattern.queryTxnFeature"><![CDATA[ SELECT CODE_KEY,CODE_VALUE,type,code fd_code FROM ( SELECT REF_NAME CODE_KEY,NAME CODE_VALUE,type,code,TAB_NAME FROM TMS_COM_FD UNION SELECT REF_NAME CODE_KEY,REF_DESC CODE_VALUE,'' TYPE,'' code,TAB_NAME FROM TMS_COM_REFFD ) F WHERE EXISTS(SELECT 1 FROM (SELECT M.TAB_NAME FROM TMS_COM_TAB M START WITH M.TAB_NAME=? CONNECT BY PRIOR M.PARENT_TAB=M.TAB_NAME)M1 WHERE F.TAB_NAME=M1.TAB_NAME) AND CODE_KEY = ? ORDER BY TAB_NAME ]]></entry> -->
	
	<!-- IP地址维护 -->
	<!-- 向TMS_MGR_LOB表中插入数据 -->
	<entry key="tms.ip.insertMgrLog">insert into %s(ID,NAME,DATA) values(1,'IPData',empty_blob())</entry>

	<entry key="tms.auth.query"><![CDATA[ select auth.*,record.real_oper from tms_mgr_authinfo auth,tms_mgr_authrecord record  where record.auth_id = auth.auth_id and query_pkvalue =? and module_id='tranConf' and auth_status='0' and record.real_oper = 'd' and record.is_main = '1']]></entry>
	
	<!-- 名单列表查询 -->
	<entry key="tms.roster.namelist"><![CDATA[ AND ROSTER.ROSTERDESC like '%'||:ROSTERDESC||'%']]></entry>
	
	<!-- 反洗钱SQL语句begin -->
	<!-- 反洗钱导出交易查询 -->
	<entry key="tms.aml.translist"><![CDATA[ SELECT traffic.* FROM tms_run_trafficdata traffic LEFT JOIN tms_run_ruletrig ruletrig ON traffic.TXNCODE = ruletrig.TXNCODE LEFT JOIN tms_run_user u ON u.userid = traffic.userid WHERE 1 = 1 ]]></entry>
	<entry key="tms.aml.amllist"><![CDATA[SELECT t.*, to_char(t.CREATETIME / (1000 * 60 * 60 * 24) + to_date('1970-01-01 08:00:00', 'yyyy-mm-dd hh24:mi:ss'), 'yyyy-mm-dd hh24:mi:ss') tCREATETIME, to_char(t.MODIFYTIME / (1000 * 60 * 60 * 24) + to_date('1970-01-01 08:00:00', 'yyyy-mm-dd hh24:mi:ss'), 'yyyy-mm-dd hh24:mi:ss') tMODIFYTIME FROM TMS_AML_MESSAGE t WHERE t.ISEXPORT = '1']]></entry>
	<!-- 反洗钱SQL语句end -->
</properties>
